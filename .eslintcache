[{"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\index.js":"1","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\App.js":"2","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\WithAuth.js":"4","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\store.js":"5","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Dashboard.jsx":"6","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\OpenOder.jsx":"7","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\ClosedOder.jsx":"8","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Password.jsx":"9","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\EditProfile.jsx":"10","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Checkout.jsx":"11","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\Cart.jsx":"12","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signin.jsx":"13","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signup.jsx":"14","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LandingPage.jsx":"15","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\reducers.js":"16","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\actions.js":"17","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\ReuseableCompononts\\Preloader.js":"18","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\CartItem.jsx":"19","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\WelcomeModal.jsx":"20","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\SuccessModal.jsx":"21","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\FailModal.jsx":"22","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\HeaderNav.jsx":"23","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\index.jsx":"24","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\types.js":"25","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LocationDropdown.jsx":"26","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Categories.jsx":"27","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\SubCategory.jsx":"28","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Meal.jsx":"29","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\AddToCart.jsx":"30","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\ItemDetail.jsx":"31","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\CartItem.jsx":"32","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\Bg.jsx":"33","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\CatItems.jsx":"34","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\Footer.jsx":"35","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\BookTable.jsx":"36"},{"size":517,"mtime":1610496847817,"results":"37","hashOfConfig":"38"},{"size":2375,"mtime":1610496847768,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1610496847819,"results":"40","hashOfConfig":"38"},{"size":918,"mtime":1610496847805,"results":"41","hashOfConfig":"38"},{"size":678,"mtime":1610496847804,"results":"42","hashOfConfig":"38"},{"size":4227,"mtime":1610496847798,"results":"43","hashOfConfig":"38"},{"size":5251,"mtime":1610995400250,"results":"44","hashOfConfig":"38"},{"size":5469,"mtime":1610995400251,"results":"45","hashOfConfig":"38"},{"size":6187,"mtime":1610996245605,"results":"46","hashOfConfig":"38"},{"size":6510,"mtime":1610996245602,"results":"47","hashOfConfig":"38"},{"size":22578,"mtime":1612107061094,"results":"48","hashOfConfig":"38"},{"size":4884,"mtime":1610995400249,"results":"49","hashOfConfig":"38"},{"size":5349,"mtime":1610996245606,"results":"50","hashOfConfig":"38"},{"size":8177,"mtime":1610996245601,"results":"51","hashOfConfig":"38"},{"size":10671,"mtime":1612103373108,"results":"52","hashOfConfig":"38"},{"size":808,"mtime":1610496847804,"results":"53","hashOfConfig":"38"},{"size":1458,"mtime":1610496847803,"results":"54","hashOfConfig":"38"},{"size":529,"mtime":1610496847795,"results":"55","hashOfConfig":"38"},{"size":5393,"mtime":1610995400250,"results":"56","hashOfConfig":"38"},{"size":2225,"mtime":1612100023395,"results":"57","hashOfConfig":"38"},{"size":6212,"mtime":1612100073217,"results":"58","hashOfConfig":"38"},{"size":1095,"mtime":1610995400250,"results":"59","hashOfConfig":"38"},{"size":4024,"mtime":1610995400250,"results":"60","hashOfConfig":"38"},{"size":413,"mtime":1610989355036,"results":"61","hashOfConfig":"38"},{"size":301,"mtime":1610496847805,"results":"62","hashOfConfig":"38"},{"size":1518,"mtime":1612099813038,"results":"63","hashOfConfig":"38"},{"size":603,"mtime":1610995116811,"results":"64","hashOfConfig":"38"},{"size":368,"mtime":1610989663955,"results":"65","hashOfConfig":"38"},{"size":2783,"mtime":1610993017210,"results":"66","hashOfConfig":"38"},{"size":3375,"mtime":1610996245605,"results":"67","hashOfConfig":"38"},{"size":2092,"mtime":1610995400251,"results":"68","hashOfConfig":"38"},{"size":3834,"mtime":1610496847777,"results":"69","hashOfConfig":"38"},{"size":3402,"mtime":1610995813517,"results":"70","hashOfConfig":"38"},{"size":402,"mtime":1610995236052,"results":"71","hashOfConfig":"38"},{"size":437,"mtime":1610996979037,"results":"72","hashOfConfig":"38"},{"size":4313,"mtime":1612107768735,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1jnohnu",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\index.js",[],["158","159"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\App.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\WithAuth.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\store.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Dashboard.jsx",["160"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from \"../ReuseableCompononts/Preloader\"\r\n\r\nexport default function Dashboard() {\r\n    const [user, setUser] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setUser(res.data.details)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <HeaderNav/>\r\n            {loading ? <Preloader /> : (\r\n            <div className=\"user-dashboard mt-5\">\r\n                <div className=\"text-center\">\r\n                    <img  alt=\"photo\" src={user.avatar === null ? \"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\" : user.avatar} className=\"rounded-circle\" style={{height: '200px', width: '200px', objectFit: \"cover\"}} />\r\n                    <h5 style={{color: 'white', fontWeight: 'bold', marginTop: '10px'}}>{user.first_name} {user.last_name}</h5>\r\n                </div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/open\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Open Oders\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/close\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Closed Orders\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/password\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Change Password\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                \r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/edit\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Edit Profile\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    </div>               \r\n                </div>\r\n            </div>\r\n            ) }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\OpenOder.jsx",["161"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport Moment from 'react-moment';\r\nimport Naira from 'react-naira';\r\n\r\n\r\nexport default function OpenOder() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n    const [orders, setOrders] = useState({\r\n        next_url: null,\r\n        data: []\r\n    })\r\n    const [call, setCall] = useState(1)\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/order/list/open\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then((res) => {\r\n            setOrders({\r\n                next_url: res.data.orders.next_page_url,\r\n                data: res.data.orders.data\r\n            })\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        if(call > 1){\r\n            Axios.get(orders.next_url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then((res) => {\r\n                setOrders({\r\n                    next_url: res.data.orders.next_page_url,\r\n                    data: [...orders.data, ...res.data.orders.data]\r\n                })\r\n                setLoading1(false)\r\n            })\r\n        }\r\n    }, [call])\r\n\r\n    const seeMore = () => {\r\n        setLoading1(true)\r\n        setCall(call + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"mt-5 container\">\r\n                    {orders.data.length > 0 ? (\r\n                        <div className=\"table-responsive mt-5 bg-white p-2\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Order Number</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Delivery Type</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Amount</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Date</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.data.map((data, i) => (\r\n                                    <tr key={i}>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.code}</td>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.delivery_type}</td>\r\n                                        <td style={{fontSize: \"13px\"}}><Naira>{data.total}</Naira></td>\r\n                                        <td style={{fontSize: \"13px\"}}>\r\n                                            <Moment format=\"YYYY/MM/DD\">\r\n                                                    {data.created_at}\r\n                                                </Moment>\r\n                                        </td>\r\n                                        <td style={{fontSize: \"13px\"}}><span className={`badge ${data.status === \"new\" ? \"badge-success\" : data.status === \"confirmed\" ? \"badge-primary\" : \"badge-warning\" }`}>{data.status}</span></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        {typeof orders.next_url === \"string\" && (\r\n                            <div className=\"my-5\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                {loading1 ? (\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                ) : (\r\n            \r\n                                    <button onClick={seeMore} className=\"cursor btn btn-style\" style={{fontWeight: \"bold\"}}>\r\n                                        SEE MORE\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    ) : (\r\n                        <div style={{fontWeight: \"bold\", color: \"#B02121\"}} className=\"text-center\">\r\n                            NO ORDER\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n    </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\ClosedOder.jsx",["162"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport Moment from 'react-moment';\r\nimport Naira from 'react-naira';\r\n\r\nexport default function ClosedOder() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n    const [orders, setOrders] = useState({\r\n        next_url: null,\r\n        data: []\r\n    })\r\n    const [call, setCall] = useState(1)\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/order/list/closed\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then((res) => {\r\n            setOrders({\r\n                next_url: res.data.orders.next_page_url,\r\n                data: res.data.orders.data\r\n            })\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        if(call > 1){\r\n            Axios.get(orders.next_url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then((res) => {\r\n                setOrders({\r\n                    next_url: res.data.orders.next_page_url,\r\n                    data: [...orders.data, ...res.data.orders.data]\r\n                })\r\n                setLoading1(false)\r\n            })\r\n        }\r\n    }, [call])\r\n\r\n    const seeMore = () => {\r\n        setLoading1(true)\r\n        setCall(call + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"mt-5 container\">\r\n                    {orders.data.length > 0 ? (\r\n                        <div className=\"table-responsive mt-5 bg-white p-2\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Order Number</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Delivery Type</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Amount</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Date</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.data.map((data, i) => (\r\n                                    <tr key={i}>\r\n                                                                                <td style={{fontSize: \"13px\"}}>{data.code}</td>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.delivery_type}</td>\r\n                                        <td style={{fontSize: \"13px\"}}><Naira>{data.total}</Naira></td>\r\n                                        <td style={{fontSize: \"13px\"}}>\r\n                                            <Moment format=\"YYYY/MM/DD\">\r\n                                                    {data.created_at}\r\n                                                </Moment>\r\n                                        </td>\r\n                                        <td style={{fontSize: \"13px\"}}><span className={`badge ${data.status === \"completed\" ? \"badge-success\" : data.status === \"cancelled\" ? \"badge-secondary\" : data.status === \"cancelled_failed_payment\" ? \"badge-warning\" : data.status === \"cancelled_system\" ? \"badge-primary\" : data.status === \"cancelled_user\" ? \"badge-dark\" : \"badge-warning\" }`}>{data.status}</span></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        {typeof orders.next_url === \"string\" && (\r\n                            <div className=\"my-5\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                {loading1 ? (\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                ) : (\r\n            \r\n                                    <button onClick={seeMore} className=\"cursor btn btn-style\" style={{fontWeight: \"bold\"}}>\r\n                                        SEE MORE\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    ) : (\r\n                        <div style={{fontWeight: \"bold\", color: \"#ff7417\"}} className=\"text-center\">\r\n                            NO ORDER\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n    </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Password.jsx",["163","164"],"import {useState} from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Password(props) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        current_password: '',\r\n        new_password: '',\r\n        retype_new_password: \"\"\r\n    });\r\n\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if(formData.new_password === formData.retype_new_password){\r\n            let token = localStorage.getItem(\"token\")\r\n            let parsedToken = JSON.parse(token)\r\n            Axios.post(\"https://server.wakameals.validprofits.xyz/api/profile/password/update\", formData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then(() => {\r\n                setLoading(false)\r\n                notifySuccess(\"Password updated successfully\")\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                notifyWarning(error.response.data.errors.current_password[0])\r\n            })\r\n        } else {\r\n            setLoading(false)\r\n            notifyWarning(\"Passwords do not match\")\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"login container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\", height: \"90vh\"}}>\r\n            <div className=\"card border-0 shadow \" style={{backgroundColor: '#ff7417', width: \"60%\"}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                        \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"current_password\">\r\n                                    Current Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"current_password\"\r\n                                    value={formData.current_password}\r\n                                    name=\"current_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"new_password\">\r\n                                    New Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"new_password\"\r\n                                    value={formData.new_password}\r\n                                    name=\"new_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"retype_new_password\">\r\n                                    Confirm New Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"retype_new_password\"\r\n                                    value={formData.retype_new_password}\r\n                                    name=\"retype_new_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            {loading ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    CHANGE PASSWORD\r\n                                </button>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\EditProfile.jsx",["165","166","167"],"import React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function EditProfile() {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n        avatar: null\r\n    });\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onImageChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            avatar: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    const onSubmitHandle = async (e) => {\r\n        e.preventDefault();\r\n        setLoading1(true)\r\n        let token = await localStorage.getItem(\"token\")\r\n        let parsedToken = await JSON.parse(token)\r\n        let form_data = await new FormData()\r\n        form_data.append(\"email\", formData.email)\r\n        form_data.append(\"first_name\", formData.first_name)\r\n        form_data.append(\"last_name\", formData.last_name)\r\n        form_data.append(\"title\", formData.title)\r\n        form_data.append(\"phone\", formData.phone)\r\n        form_data.append(\"avatar\", formData.avatar)\r\n        Axios.post(\"https://server.wakameals.validprofits.xyz/api/profile/update\", form_data, {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then(() => {\r\n            setLoading1(false)\r\n            notifySuccess(\"Profile updated successfully\")\r\n        })\r\n        .catch((e) => {\r\n            setLoading1(false)\r\n            let err = Object.keys(e.response.data.errors)[0][0];\r\n            notifyWarning(err) \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setFormData({\r\n                ...formData,\r\n                email: res.data.details.email,\r\n                first_name: res.data.details.first_name,\r\n                last_name: res.data.details.last_name,\r\n                title: res.data.details.title,\r\n                phone: res.data.details.phone,\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"user-dashboard mt-5 container bg-white p-2\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"first_name\" style={{fontSize: '0.7em', fontWeight: 'bold'}}>\r\n                        First Name\r\n                    </label>\r\n                    <input onChange={onChangeHandler} value={formData.first_name} name=\"first_name\" id=\"first_name\" type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"last_name\" style={{fontSize: '0.7em', fontWeight: 'bold'}}>\r\n                        Last Name\r\n                    </label>\r\n                    <input onChange={onChangeHandler} name=\"last_name\" value={formData.last_name} id=\"last_name\" type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label style={{fontSize: '0.7em', fontWeight: 'bold'}} htmlFor=\"title\">Title</label>\r\n                    <select onChange={onChangeHandler} value={formData.title} id=\"title\" name=\"title\" onChange={e => onChangeHandler(e)} className=\"form-control\" id=\"title\">\r\n                        <option value=\"mr\">Mr</option>\r\n                        <option value=\"mrs\">Mrs</option>\r\n                        <option value=\"miss\">Miss</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"number\" style={{fontSize: '0.7em', fontWeight: 'bold'}}>\r\n                        Phone Number\r\n                    </label>\r\n                    <input  onChange={onChangeHandler} value={formData.phone} name=\"phone\" id=\"number\" type=\"number\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                    <input accept=\"image/*\" onChange={onImageChange} type=\"file\" className=\"custom-file-input\" id=\"image\" />\r\n                    <label className=\"custom-file-label\" htmlFor=\"image\" style={{fontSize: '1em', opacity: '0.8'}}>\r\n                        Choose Profile Avatar\r\n                    </label>\r\n                </div>\r\n                {loading1 ? (\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n\r\n                <div className=\"form-group mt-5\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        onClick={onSubmitHandle}\r\n                        className=\"btn btn-block\"\r\n                        style={{color: 'white', backgroundColor: ' #B02121'}}>\r\n                        UPDATE PROFILE\r\n                    </button>\r\n                </div>\r\n                )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Checkout.jsx",["168","169","170","171","172","173"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\Cart.jsx",["174","175"],"import { TextareaAutosize } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Naira from \"react-naira\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderNav from \"../../Navigation/HeaderNav\";\r\nimport Preloader from \"../../ReuseableCompononts/Preloader\";\r\nimport CartItem from \"./CartItem\";\r\n\r\n\r\nconst Cart = (props) => {\r\n    const [cart, setCart] = useState([])\r\n    const [carts, setCarts] = useState([])\r\n    const [item, setItem] = useState({})\r\n    const [token, setToken] = useState(undefined)\r\n    const [loading, setLoading] = useState(true)\r\n    const [press, setPress] = useState(0)\r\n    const [location, setLocation] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(press > 0){\r\n            if(carts.length > 0){\r\n                localStorage.setItem(\"cart\", JSON.stringify(carts))\r\n            } else {\r\n                localStorage.removeItem(\"cart\")\r\n            }\r\n        }\r\n    }, [press])\r\n\r\n    useEffect(() => {\r\n        let cartItem = localStorage.getItem(\"cart\")\r\n        let tokenn = localStorage.getItem(\"token\")\r\n        let locationItem = localStorage.getItem(\"location\")\r\n        let parsedLocation = JSON.parse(locationItem)\r\n        let parsedCartItem = JSON.parse(cartItem)\r\n        let parsedToken = JSON.parse(tokenn)\r\n        setToken(parsedToken)\r\n        setCarts(parsedCartItem)\r\n        if(parsedLocation){\r\n            setLocation(true)\r\n        }\r\n        if(parsedCartItem !== undefined){\r\n            if(typeof parsedToken === \"string\"){\r\n                Axios.post(\"https://server.wakameals.validprofits.xyz/api/cart/sync\", {items: parsedCartItem}, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${parsedToken}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                        Accept: \"application/json\",\r\n                      }\r\n                }).then((res) => {\r\n                    setCart(res.data.cart.items)\r\n                    setItem(res.data.cart)\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    \r\n                })\r\n            } else {\r\n                Axios.post(\"https://server.wakameals.validprofits.xyz/api/cart/sync\", {items: parsedCartItem})\r\n                .then((res) => {\r\n                    setCart(res.data.cart.items)\r\n                    setItem(res.data.cart)\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    \r\n                })\r\n            }\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <HeaderNav cart={true}/>\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"my-5 container bg-white p-2\">\r\n                    <h1 style={{fontSize: \"26px\"}} >CART ({loading ? 0 : cart.length})</h1>\r\n                    <div className=\"mt-5\">\r\n                    {cart.map((data, index) => (\r\n                        <CartItem setPress={setPress} press={press} carts={carts} setCarts={setCarts} setCart={setCart} token={token} total={item.total} key={index} cart={data} />\r\n                    ))}\r\n                    </div>\r\n                    {cart.length > 0 && (\r\n                        <div className=\"mt-5\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                            <div style={{fontWeight: \"bold\"}}>TOTAL:</div>\r\n                            <div style={{color: \"#ff7417\", fontSize: \"24px\", fontWeight: \"bold\"}} className=\"ml-5 mr-md-4\"><Naira>{item.total}</Naira></div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"mt-5 shadow\">\r\n                        <div className=\"p-4\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                            <Link to=\"/\">\r\n                                <button style={{color: \"#ff7417\", backgroundColor: \"white\", border: \"none\"}} className=\"btn shadow px-3 py-2\">\r\n                                    CONTINUE SHOPPING\r\n                                </button>\r\n                            </Link>\r\n                            {cart.length > 0 && (\r\n                                <Link to={{pathname: `${location ? \"/checkout\" : \"/\"}`, query: {price: item.total, location: true}}}>\r\n                                    <button style={{color: \"white\", backgroundColor: \"#ff7417\", border: \"none\"}} className=\"btn ml-4 shadow px-3 py-2\">\r\n                                        GO TO CHECKOUT\r\n                                    </button>\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signin.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signup.jsx",["176"],"import {useState} from 'react';\r\nimport {signup} from '../../Redux/actions';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignUp(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, error} = userSignin;\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const {email, password, first_name, last_name, title, phone} = formData;\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        dispatch(signup(formData)).then(() => {}).then(() => {\r\n                let token = localStorage.getItem(\"token\")\r\n                if(typeof token === \"string\"){\r\n                    props.history.push('/account');\r\n                }\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <div className=\"login container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\", paddingTop: \"50px\", paddingBottom: \"50px\"}}>\r\n            <div className=\"card border-0 shadow \" style={{backgroundColor: '#B02121', width: \"60%\"}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"first_name\">\r\n                                    First Name\r\n                                </label>\r\n                                <input\r\n                                    id=\"first_name\"\r\n                                    value={first_name}\r\n                                    name=\"first_name\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.first_name}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"last_name\">\r\n                                    Last Name\r\n                                </label>\r\n                                <input\r\n                                    id=\"last_name\"\r\n                                    value={last_name}\r\n                                    name=\"last_name\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.last_name}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"title\">Title</label>\r\n                                <select value={title} id=\"title\" name=\"title\" onChange={e => onChangeHandler(e)} className=\"form-control\" id=\"title\">\r\n                                    <option value=\"Mr\">Mr</option>\r\n                                    <option value=\"Ms\">Ms</option>\r\n                                </select>\r\n                                {error && <p style={styles.formError}>{error.errors.title}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"number\">\r\n                                    Phone Number\r\n                                </label>\r\n                                <input\r\n                                    id=\"number\"\r\n                                    value={phone}\r\n                                    name=\"phone\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.phone}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    id=\"email\"\r\n                                    value={email}\r\n                                    name=\"email\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.identifier}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.email}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.username}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"password\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    name=\"password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.password}</p>}\r\n                            </div>\r\n                            {loading ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    SIGN UP\r\n                                </button>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group col-md-12\">\r\n                                <Link to=\"/signin\" className=\"btn\" style={{color: '#023a9c', fontWeight: 'bold'}}>\r\n                                    Already a User? Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LandingPage.jsx",["177","178","179","180","181"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\reducers.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\actions.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\ReuseableCompononts\\Preloader.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\CartItem.jsx",["182"],"\r\nimport Naira from \"react-naira\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst CartItem = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const remove = async () => {\r\n        props.setCart(carts => carts.filter(cartt => cartt.id !== props.cart.id));\r\n        props.setCarts(carts => carts.filter(cartt => cartt.id !== props.cart.id));\r\n        notifySuccess(\"Cart item removed\")\r\n        props.setPress(props.press + 1)\r\n    }\r\n\r\n    const removeCart = async () => {\r\n        setLoading(true)\r\n        if(typeof props.token === \"string\"){\r\n            Axios.post(\"https://server.wakameals.validprofits.xyz/api/cart/remove\", {id: props.cart.id}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${props.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  }\r\n            })\r\n            .then((res) => {\r\n                setLoading(false)\r\n                remove()\r\n            })\r\n            .catch(() => {\r\n                setLoading(false)\r\n                notifyWarning(\"Something went wrong!\")\r\n            })\r\n        } else {\r\n            remove()\r\n            setLoading(false) \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: \"white\"}} className=\"card p-3 mt-4 shadow border-0\">\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3\">\r\n                    <img  alt=\"photo\" style={{width: '100%', height: '120px', objectFit: \"contain\"}} src={props.cart.meal.image} />\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"100%\"}}>\r\n                        <div>\r\n                            <div className=\"mt-3 mt-lg-0\">\r\n                                <h6>{props.cart.meal.name}</h6>\r\n                            </div>\r\n                            <div className=\"mt-2\" style={{color: \"gray\", fontSize: \"13px\"}} >For: {typeof props.cart.name === \"number\" ? `person ${props.cart.name}` : props.cart.name }</div>\r\n                        </div>\r\n                        <div className=\"mt-2 d-none d-lg-block\">\r\n                            {loading ? (\r\n                                <div className=\"spinner-grow\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            ) : (\r\n                                <div onClick={removeCart} style={{color: \"#ff7417\", fontWeight: \"bold\", fontSize: \"13px\"}} className=\"cursor\">\r\n                                    <MdDeleteForever style={{color: \"#ff7417\", fontSize: \"20px\"}}/> REMOVE\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff7417\", fontWeight: \"bold\"}}>\r\n                        MEAL PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.meal.price}</Naira>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff7417\", fontWeight: \"bold\"}}>\r\n                        EXTRAS PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.sub_total - Number(props.cart.meal.price)}</Naira>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff7417\", fontWeight: \"bold\"}}>\r\n                        TOTAL PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.sub_total}</Naira>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-2 d-block d-lg-none\">\r\n                    {loading ? (\r\n                        <div className=\"spinner-grow\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div onClick={removeCart} style={{color: \"#ff7417\", fontWeight: \"bold\", fontSize: \"15px\"}} className=\"cursor\">\r\n                            <MdDeleteForever style={{color: \"#ff7417\", fontSize: \"25px\"}}/> REMOVE\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\WelcomeModal.jsx",["183"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\SuccessModal.jsx",["184","185","186"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\FailModal.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\HeaderNav.jsx",["187","188"],"import { useEffect, useState } from 'react'\r\nimport {BiMenuAltRight} from \"react-icons/bi\"\r\nimport {MdAddLocation, MdShoppingCart} from \"react-icons/md\"\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n    USER_LOGOUT,\r\n    REFRESH\r\n} from \"../../Redux/types\"\r\n\r\nexport default function HeaderNav(props) {\r\n    const [token, setToken] = useState(null)\r\n    const [cart, setCart] = useState(0)\r\n    const dispatch = useDispatch();\r\n    let history = useHistory()\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        dispatch({ type: USER_LOGOUT });\r\n        setToken(null)\r\n        history.push(\"/signin\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.cartSize){\r\n            setCart(props.cartSize)\r\n        }\r\n    }, [props.cartSize])\r\n\r\n    useEffect(() => {\r\n        let tok = localStorage.getItem(\"token\")\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        setToken(tok)\r\n        if(parsedCart !== undefined && parsedCart !== null){\r\n            setCart(parsedCart.length)\r\n        }\r\n    }, [])\r\n\r\n    const changeLocation = () => {\r\n        dispatch({ type: REFRESH });\r\n        props.setOpen(true)\r\n        props.setSuccess(false)\r\n    }\r\n    return (\r\n        <div>\r\n               {/* ============ NAVBAR SECTION==========  */}\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n            <Link to=\"/\" className=\"navbar-brand\"> <img  alt=\"logo\" src=\"/logo.jpeg\" /></Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <BiMenuAltRight style={{color: \"white\", fontSize: \"30px\"}}/>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                \r\n                    {typeof token === \"string\" && (\r\n                    <Link to=\"/account\" className=\"nav-item\">\r\n                        <a className=\"nav-link text-white\">My Account</a>\r\n                    </Link>\r\n                     )}\r\n                    {typeof token === \"string\" && (\r\n                        <div onClick={handleLogout} className=\"nav-item cursor\">\r\n                            <div className=\"nav-link text-white\">Log Out</div>\r\n                        </div>\r\n                    )}\r\n                    {typeof token !== \"string\" && (\r\n                        <Link to=\"/signin\" className=\"nav-item\">\r\n                            <div className=\"nav-link text-white\">Sign In</div>\r\n                        </Link>\r\n                    )}\r\n                    {typeof token !== \"string\" && (\r\n                    <Link to=\"/signup\" className=\"nav-item\">\r\n                        <div className=\"nav-link text-white\">Sign Up</div>\r\n                    </Link>\r\n                    )}\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    {props.setOpen && props.home && (\r\n                        <div className=\"nav-item cursor\">\r\n                            <div onClick={changeLocation} className=\"nav-link text-white\">\r\n                                <MdAddLocation style={{color: \"#ff7417\", fontSize: \"1.5em\"}}/> change location\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {!props.cart && (\r\n                        <Link to=\"/cart\" className=\"nav-item\">\r\n                            <a className=\"nav-link text-white\">\r\n                                <MdShoppingCart style={{color: \"#ff7417\", fontSize: \"1.5em\"}}/> {cart} items\r\n                            </a>\r\n                        </Link>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        {/* ============ NAVBAR SECTION ENDS HERE==========  */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\index.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\types.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LocationDropdown.jsx",["189","190"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Categories.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\SubCategory.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Meal.jsx",["191"],"import Naira from 'react-naira'\r\nimport ItemDetail from './ItemDetail';\r\nimport AddToCart from './AddToCart';\r\nimport { useState } from 'react';\r\nimport parse from 'html-react-parser';\r\n\r\nconst Meal = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [openCart, setOpenCart] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClickOpenCart = () => {\r\n        setOpenCart(true);\r\n    };\r\n\r\n    const handleCloseCart = () => {\r\n        setOpenCart(false);\r\n    };\r\n    return (\r\n        <div className=\"bg-white mt-4\">\r\n            <div className=\"mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 col-md-8\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3\">\r\n                                \r\n                                <img\r\n                                     alt=\"photo\"\r\n                                    style={{width: '90px', height: '90px'}}\r\n                                    src={props.meal.image}\r\n                                />\r\n                            </div>\r\n                            <div style={{width: \"100%\"}} className=\"col-lg-9\">\r\n                                <div className=\"food-desc\">{props.meal.name}</div>\r\n                                <div className=\"food-desc mute mt-1\">{parse(props.meal.description.substring(0, 35))}</div>\r\n                                <button \r\n                                    className=\"btn btn-style btn-sm\"\r\n                                    onClick={handleClickOpen}\r\n                                >\r\n                                    read more\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 col-md-4\">\r\n                        <div>\r\n                            <p className=\"food-list-item-1\" style={{fontSize: '1.2em'}}><Naira>{props.meal.price}</Naira></p>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                            <button onClick={handleClickOpenCart} className=\"btn btn-sm btn-danger\">Add To Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"py-2\" />\r\n            <ItemDetail handleClose={handleClose} open={open} meal={props.meal} />\r\n            <AddToCart handleClose={handleCloseCart} open={openCart} notifySuccess={props.notifySuccess} handleAddCart={props.handleAddCart} person={props.person} meal={props.meal} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meal","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\AddToCart.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\ItemDetail.jsx",["192"],"import React from 'react';\r\nimport Naira from 'react-naira';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nexport default function ItemDetail({meal, open, handleClose}) {\r\n    \r\n    return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{meal.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div>\r\n                            <img alt=\"photo\" style={{height: '200px', width: '100%'}} src={meal.image} />\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"mt-3\">\r\n                                <div className=\"d-flex flex-row-reverse\">\r\n                                    <p style={{color: 'black', fontSize: '0.8em', fontWeight: 'bold'}}><Naira>{meal.price}</Naira></p>\r\n                                </div>\r\n                                <h5 style={{color: 'black'}}>Description </h5>\r\n                                <p style={{color: 'black', fontSize: \"0.7em\"}}>\r\n                                    {parse(meal.description)}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} style={{color: \"#ff7417\"}}>\r\n                    CLOSE\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n      \r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\CartItem.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\Bg.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\CatItems.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\Footer.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\BookTable.jsx",["193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":31,"column":21,"nodeType":"200","endLine":31,"endColumn":265},{"ruleId":"201","severity":1,"message":"202","line":56,"column":8,"nodeType":"203","endLine":56,"endColumn":14,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"202","line":55,"column":8,"nodeType":"203","endLine":55,"endColumn":14,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":10,"column":12,"nodeType":"208","messageId":"209","endLine":10,"endColumn":19},{"ruleId":"206","severity":1,"message":"210","line":10,"column":21,"nodeType":"208","messageId":"209","endLine":10,"endColumn":31},{"ruleId":"201","severity":1,"message":"211","line":89,"column":8,"nodeType":"203","endLine":89,"endColumn":10,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":121,"column":103,"nodeType":"215","endLine":121,"endColumn":137},{"ruleId":"213","severity":1,"message":"214","line":121,"column":163,"nodeType":"215","endLine":121,"endColumn":173},{"ruleId":"206","severity":1,"message":"216","line":1,"column":18,"nodeType":"208","messageId":"209","endLine":1,"endColumn":32},{"ruleId":"206","severity":1,"message":"217","line":10,"column":20,"nodeType":"208","messageId":"209","endLine":10,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":22,"column":1,"nodeType":"220","messageId":"221","endLine":26,"endColumn":2},{"ruleId":"206","severity":1,"message":"222","line":33,"column":12,"nodeType":"208","messageId":"209","endLine":33,"endColumn":23},{"ruleId":"206","severity":1,"message":"223","line":90,"column":12,"nodeType":"208","messageId":"209","endLine":90,"endColumn":16},{"ruleId":"201","severity":1,"message":"224","line":316,"column":8,"nodeType":"203","endLine":316,"endColumn":10,"suggestions":"225"},{"ruleId":"206","severity":1,"message":"226","line":1,"column":10,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"227","line":28,"column":8,"nodeType":"203","endLine":28,"endColumn":15,"suggestions":"228"},{"ruleId":"213","severity":1,"message":"214","line":77,"column":139,"nodeType":"215","endLine":77,"endColumn":149},{"ruleId":"206","severity":1,"message":"229","line":20,"column":11,"nodeType":"208","messageId":"209","endLine":20,"endColumn":19},{"ruleId":"206","severity":1,"message":"230","line":31,"column":29,"nodeType":"208","messageId":"209","endLine":31,"endColumn":47},{"ruleId":"206","severity":1,"message":"231","line":59,"column":13,"nodeType":"208","messageId":"209","endLine":59,"endColumn":29},{"ruleId":"201","severity":1,"message":"232","line":127,"column":8,"nodeType":"203","endLine":127,"endColumn":10,"suggestions":"233"},{"ruleId":"201","severity":1,"message":"234","line":142,"column":8,"nodeType":"203","endLine":142,"endColumn":17,"suggestions":"235"},{"ruleId":"198","severity":1,"message":"199","line":62,"column":21,"nodeType":"200","endLine":62,"endColumn":132},{"ruleId":"206","severity":1,"message":"236","line":1,"column":10,"nodeType":"208","messageId":"209","endLine":1,"endColumn":19},{"ruleId":"206","severity":1,"message":"236","line":1,"column":10,"nodeType":"208","messageId":"209","endLine":1,"endColumn":19},{"ruleId":"206","severity":1,"message":"230","line":25,"column":29,"nodeType":"208","messageId":"209","endLine":25,"endColumn":47},{"ruleId":"206","severity":1,"message":"237","line":79,"column":11,"nodeType":"208","messageId":"209","endLine":79,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":59,"column":25,"nodeType":"200","endLine":59,"endColumn":60},{"ruleId":"238","severity":1,"message":"239","line":88,"column":29,"nodeType":"200","endLine":88,"endColumn":64},{"ruleId":"206","severity":1,"message":"240","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":9,"column":75,"nodeType":"243","messageId":"221","endLine":9,"endColumn":77},{"ruleId":"198","severity":1,"message":"199","line":34,"column":33,"nodeType":"200","endLine":38,"endColumn":35},{"ruleId":"198","severity":1,"message":"199","line":25,"column":29,"nodeType":"200","endLine":25,"endColumn":106},{"ruleId":"201","severity":1,"message":"244","line":66,"column":8,"nodeType":"203","endLine":66,"endColumn":10,"suggestions":"245"},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orders.data' and 'orders.next_url'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOrders' needs the current value of 'orders.data'.","ArrayExpression",["248"],["249"],"no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","'setSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["250"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MdLocationCity' is defined but never used.","'TextField' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'order_codes' is assigned a value but never used.","'cart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config', 'history', 'pickupLocation', and 'props.location.query'. Either include them or remove the dependency array. You can also do a functional update 'setConfig(c => ...)' if you only need 'config' in the 'setConfig' call.",["251"],"'TextareaAutosize' is defined but never used.","React Hook useEffect has a missing dependency: 'carts'. Either include it or remove the dependency array.",["252"],"'dispatch' is assigned a value but never used.","'setNumberOfPersons' is assigned a value but never used.","'parsedStoredCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'done.done' and 'props.location.query'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'numberOfPersons'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPerson' needs the current value of 'numberOfPersons'.",["254"],"'useEffect' is defined but never used.","'done1' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["255"],"no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [call, orders.data, orders.next_url]",{"range":"271","text":"272"},{"range":"273","text":"272"},"Update the dependencies array to be: [formData]",{"range":"274","text":"275"},"Update the dependencies array to be: [config, history, pickupLocation, props.location.query]",{"range":"276","text":"277"},"Update the dependencies array to be: [carts, press]",{"range":"278","text":"279"},"Update the dependencies array to be: [done.done, props.location.query]",{"range":"280","text":"281"},"Update the dependencies array to be: [numberOfPersons, success]",{"range":"282","text":"283"},"Update the dependencies array to be: [props.token]",{"range":"284","text":"285"},[1880,1886],"[call, orders.data, orders.next_url]",[1882,1888],[3058,3060],"[formData]",[10659,10661],"[config, history, pickupLocation, props.location.query]",[969,976],"[carts, press]",[4623,4625],"[done.done, props.location.query]",[5119,5128],"[numberOfPersons, success]",[2351,2353],"[props.token]"]