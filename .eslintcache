[{"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\index.js":"1","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\App.js":"2","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\WithAuth.js":"4","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\store.js":"5","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Dashboard.jsx":"6","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\OpenOder.jsx":"7","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\ClosedOder.jsx":"8","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Password.jsx":"9","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\EditProfile.jsx":"10","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Checkout.jsx":"11","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\Cart.jsx":"12","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signin.jsx":"13","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signup.jsx":"14","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LandingPage.jsx":"15","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\reducers.js":"16","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\actions.js":"17","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\ReuseableCompononts\\Preloader.js":"18","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\CartItem.jsx":"19","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\WelcomeModal.jsx":"20","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\SuccessModal.jsx":"21","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\FailModal.jsx":"22","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\HeaderNav.jsx":"23","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\index.jsx":"24","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\types.js":"25","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LocationDropdown.jsx":"26","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Categories.jsx":"27","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\SubCategory.jsx":"28","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Meal.jsx":"29","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\AddToCart.jsx":"30","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\ItemDetail.jsx":"31","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\CartItem.jsx":"32","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\Bg.jsx":"33","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\CatItems.jsx":"34","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\Footer.jsx":"35","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\BookTable.jsx":"36"},{"size":517,"mtime":1610496847817,"results":"37","hashOfConfig":"38"},{"size":2387,"mtime":1613164552575,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1610496847819,"results":"40","hashOfConfig":"38"},{"size":1100,"mtime":1613165175355,"results":"41","hashOfConfig":"38"},{"size":678,"mtime":1610496847804,"results":"42","hashOfConfig":"38"},{"size":4198,"mtime":1613162600743,"results":"43","hashOfConfig":"38"},{"size":5238,"mtime":1613078298884,"results":"44","hashOfConfig":"38"},{"size":5456,"mtime":1613078298886,"results":"45","hashOfConfig":"38"},{"size":6174,"mtime":1613078298884,"results":"46","hashOfConfig":"38"},{"size":6484,"mtime":1613078298884,"results":"47","hashOfConfig":"38"},{"size":22677,"mtime":1613162701569,"results":"48","hashOfConfig":"38"},{"size":4858,"mtime":1613163943325,"results":"49","hashOfConfig":"38"},{"size":5822,"mtime":1613164973593,"results":"50","hashOfConfig":"38"},{"size":8511,"mtime":1613165001032,"results":"51","hashOfConfig":"38"},{"size":11965,"mtime":1613078298885,"results":"52","hashOfConfig":"38"},{"size":808,"mtime":1610496847804,"results":"53","hashOfConfig":"38"},{"size":1516,"mtime":1613078298885,"results":"54","hashOfConfig":"38"},{"size":551,"mtime":1612842897317,"results":"55","hashOfConfig":"38"},{"size":5380,"mtime":1613078298884,"results":"56","hashOfConfig":"38"},{"size":2616,"mtime":1612844052244,"results":"57","hashOfConfig":"38"},{"size":11949,"mtime":1613153087749,"results":"58","hashOfConfig":"38"},{"size":1095,"mtime":1612840399148,"results":"59","hashOfConfig":"38"},{"size":4057,"mtime":1612841758954,"results":"60","hashOfConfig":"38"},{"size":413,"mtime":1610989355036,"results":"61","hashOfConfig":"38"},{"size":301,"mtime":1610496847805,"results":"62","hashOfConfig":"38"},{"size":1498,"mtime":1612844932977,"results":"63","hashOfConfig":"38"},{"size":603,"mtime":1610995116811,"results":"64","hashOfConfig":"38"},{"size":368,"mtime":1610989663955,"results":"65","hashOfConfig":"38"},{"size":2817,"mtime":1612844630834,"results":"66","hashOfConfig":"38"},{"size":3384,"mtime":1612841816814,"results":"67","hashOfConfig":"38"},{"size":2092,"mtime":1612840399148,"results":"68","hashOfConfig":"38"},{"size":3834,"mtime":1610496847777,"results":"69","hashOfConfig":"38"},{"size":3418,"mtime":1612840399147,"results":"70","hashOfConfig":"38"},{"size":402,"mtime":1610995236052,"results":"71","hashOfConfig":"38"},{"size":379,"mtime":1612841615769,"results":"72","hashOfConfig":"38"},{"size":9209,"mtime":1613158877906,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"ms3bfu",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"76"},"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\index.js",[],["163","164"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\App.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\WithAuth.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\store.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Dashboard.jsx",["165"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from \"../ReuseableCompononts/Preloader\"\r\n\r\nexport default function Dashboard() {\r\n    const [user, setUser] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakafoods.com/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setUser(res.data.details)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <HeaderNav/>\r\n            {loading ? <Preloader /> : (\r\n            <div className=\"user-dashboard mt-5\">\r\n                <div className=\"text-center\">\r\n                    <img  alt=\"photo\" src={user.avatar === null ? \"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\" : user.avatar} className=\"rounded-circle\" style={{height: '200px', width: '200px', objectFit: \"cover\"}} />\r\n                    <h5 style={{fontWeight: 'bold', marginTop: '10px'}}>{user.first_name} {user.last_name}</h5>\r\n                </div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/open\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Open Oders\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/close\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Closed Orders\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/password\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Change Password\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                \r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/edit\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Edit Profile\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    </div>               \r\n                </div>\r\n            </div>\r\n            ) }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\OpenOder.jsx",["166"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport Moment from 'react-moment';\r\nimport Naira from 'react-naira';\r\n\r\n\r\nexport default function OpenOder() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n    const [orders, setOrders] = useState({\r\n        next_url: null,\r\n        data: []\r\n    })\r\n    const [call, setCall] = useState(1)\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakafoods.com/api/order/list/open\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then((res) => {\r\n            setOrders({\r\n                next_url: res.data.orders.next_page_url,\r\n                data: res.data.orders.data\r\n            })\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        if(call > 1){\r\n            Axios.get(orders.next_url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then((res) => {\r\n                setOrders({\r\n                    next_url: res.data.orders.next_page_url,\r\n                    data: [...orders.data, ...res.data.orders.data]\r\n                })\r\n                setLoading1(false)\r\n            })\r\n        }\r\n    }, [call])\r\n\r\n    const seeMore = () => {\r\n        setLoading1(true)\r\n        setCall(call + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"mt-5 container\">\r\n                    {orders.data.length > 0 ? (\r\n                        <div className=\"table-responsive mt-5 bg-white p-2\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Order Number</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Delivery Type</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Amount</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Date</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.data.map((data, i) => (\r\n                                    <tr key={i}>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.code}</td>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.delivery_type}</td>\r\n                                        <td style={{fontSize: \"13px\"}}><Naira>{data.total}</Naira></td>\r\n                                        <td style={{fontSize: \"13px\"}}>\r\n                                            <Moment format=\"YYYY/MM/DD\">\r\n                                                    {data.created_at}\r\n                                                </Moment>\r\n                                        </td>\r\n                                        <td style={{fontSize: \"13px\"}}><span className={`badge ${data.status === \"new\" ? \"badge-success\" : data.status === \"confirmed\" ? \"badge-primary\" : \"badge-warning\" }`}>{data.status}</span></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        {typeof orders.next_url === \"string\" && (\r\n                            <div className=\"my-5\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                {loading1 ? (\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                ) : (\r\n            \r\n                                    <button onClick={seeMore} className=\"cursor btn btn-style\" style={{fontWeight: \"bold\"}}>\r\n                                        SEE MORE\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    ) : (\r\n                        <div style={{fontWeight: \"bold\", color: \"#ff8903\"}} className=\"text-center\">\r\n                            NO ORDER\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n    </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\ClosedOder.jsx",["167"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport Moment from 'react-moment';\r\nimport Naira from 'react-naira';\r\n\r\nexport default function ClosedOder() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n    const [orders, setOrders] = useState({\r\n        next_url: null,\r\n        data: []\r\n    })\r\n    const [call, setCall] = useState(1)\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakafoods.com/api/order/list/closed\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then((res) => {\r\n            setOrders({\r\n                next_url: res.data.orders.next_page_url,\r\n                data: res.data.orders.data\r\n            })\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        if(call > 1){\r\n            Axios.get(orders.next_url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then((res) => {\r\n                setOrders({\r\n                    next_url: res.data.orders.next_page_url,\r\n                    data: [...orders.data, ...res.data.orders.data]\r\n                })\r\n                setLoading1(false)\r\n            })\r\n        }\r\n    }, [call])\r\n\r\n    const seeMore = () => {\r\n        setLoading1(true)\r\n        setCall(call + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"mt-5 container\">\r\n                    {orders.data.length > 0 ? (\r\n                        <div className=\"table-responsive mt-5 bg-white p-2\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Order Number</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Delivery Type</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Amount</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Date</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.data.map((data, i) => (\r\n                                    <tr key={i}>\r\n                                                                                <td style={{fontSize: \"13px\"}}>{data.code}</td>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.delivery_type}</td>\r\n                                        <td style={{fontSize: \"13px\"}}><Naira>{data.total}</Naira></td>\r\n                                        <td style={{fontSize: \"13px\"}}>\r\n                                            <Moment format=\"YYYY/MM/DD\">\r\n                                                    {data.created_at}\r\n                                                </Moment>\r\n                                        </td>\r\n                                        <td style={{fontSize: \"13px\"}}><span className={`badge ${data.status === \"completed\" ? \"badge-success\" : data.status === \"cancelled\" ? \"badge-secondary\" : data.status === \"cancelled_failed_payment\" ? \"badge-warning\" : data.status === \"cancelled_system\" ? \"badge-primary\" : data.status === \"cancelled_user\" ? \"badge-dark\" : \"badge-warning\" }`}>{data.status}</span></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        {typeof orders.next_url === \"string\" && (\r\n                            <div className=\"my-5\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                {loading1 ? (\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                ) : (\r\n            \r\n                                    <button onClick={seeMore} className=\"cursor btn btn-style\" style={{fontWeight: \"bold\"}}>\r\n                                        SEE MORE\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    ) : (\r\n                        <div style={{fontWeight: \"bold\", color: \"#ff8903\"}} className=\"text-center\">\r\n                            NO ORDER\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n    </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Password.jsx",["168","169"],"import {useState} from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Password(props) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        current_password: '',\r\n        new_password: '',\r\n        retype_new_password: \"\"\r\n    });\r\n\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if(formData.new_password === formData.retype_new_password){\r\n            let token = localStorage.getItem(\"token\")\r\n            let parsedToken = JSON.parse(token)\r\n            Axios.post(\"https://server.wakafoods.com/api/profile/password/update\", formData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then(() => {\r\n                setLoading(false)\r\n                notifySuccess(\"Password updated successfully\")\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                notifyWarning(error.response.data.errors.current_password[0])\r\n            })\r\n        } else {\r\n            setLoading(false)\r\n            notifyWarning(\"Passwords do not match\")\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"login container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\", height: \"90vh\"}}>\r\n            <div className=\"card border-0 shadow \" style={{backgroundColor: '#ff8903', width: \"60%\"}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                        \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"current_password\">\r\n                                    Current Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"current_password\"\r\n                                    value={formData.current_password}\r\n                                    name=\"current_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"new_password\">\r\n                                    New Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"new_password\"\r\n                                    value={formData.new_password}\r\n                                    name=\"new_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"retype_new_password\">\r\n                                    Confirm New Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"retype_new_password\"\r\n                                    value={formData.retype_new_password}\r\n                                    name=\"retype_new_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            {loading ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    CHANGE PASSWORD\r\n                                </button>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\EditProfile.jsx",["170","171","172"],"import React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function EditProfile() {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n        avatar: null\r\n    });\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const onChangeHandler = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onImageChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            avatar: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    const onSubmitHandle = async (e) => {\r\n        e.preventDefault();\r\n        setLoading1(true)\r\n        let token = await localStorage.getItem(\"token\")\r\n        let parsedToken = await JSON.parse(token)\r\n        let form_data = await new FormData()\r\n        form_data.append(\"email\", formData.email)\r\n        form_data.append(\"first_name\", formData.first_name)\r\n        form_data.append(\"last_name\", formData.last_name)\r\n        form_data.append(\"title\", formData.title)\r\n        form_data.append(\"phone\", formData.phone)\r\n        form_data.append(\"avatar\", formData.avatar)\r\n        Axios.post(\"https://server.wakafoods.com/api/profile/update\", form_data, {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then(() => {\r\n            setLoading1(false)\r\n            notifySuccess(\"Profile updated successfully\")\r\n        })\r\n        .catch((e) => {\r\n            setLoading1(false)\r\n            let err = Object.keys(e.response.data.errors)[0][0];\r\n            notifyWarning(err) \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakafoods.com/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setFormData({\r\n                ...formData,\r\n                email: res.data.details.email,\r\n                first_name: res.data.details.first_name,\r\n                last_name: res.data.details.last_name,\r\n                title: res.data.details.title,\r\n                phone: res.data.details.phone,\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"user-dashboard mt-5 container bg-white p-2\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"first_name\" style={{fontSize: '0.7em', fontWeight: 'bold'}}>\r\n                        First Name\r\n                    </label>\r\n                    <input onChange={onChangeHandler} value={formData.first_name} name=\"first_name\" id=\"first_name\" type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"last_name\" style={{fontSize: '0.7em', fontWeight: 'bold'}}>\r\n                        Last Name\r\n                    </label>\r\n                    <input onChange={onChangeHandler} name=\"last_name\" value={formData.last_name} id=\"last_name\" type=\"text\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label style={{fontSize: '0.7em', fontWeight: 'bold'}} htmlFor=\"title\">Title</label>\r\n                    <select onChange={onChangeHandler} value={formData.title} id=\"title\" name=\"title\" onChange={e => onChangeHandler(e)} className=\"form-control\" id=\"title\">\r\n                        <option value=\"mr\">Mr</option>\r\n                        <option value=\"mrs\">Mrs</option>\r\n                        <option value=\"miss\">Miss</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"number\" style={{fontSize: '0.7em', fontWeight: 'bold'}}>\r\n                        Phone Number\r\n                    </label>\r\n                    <input  onChange={onChangeHandler} value={formData.phone} name=\"phone\" id=\"number\" type=\"number\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                    <input accept=\"image/*\" onChange={onImageChange} type=\"file\" className=\"custom-file-input\" id=\"image\" />\r\n                    <label className=\"custom-file-label\" htmlFor=\"image\" style={{fontSize: '1em', opacity: '0.8'}}>\r\n                        Choose Profile Avatar\r\n                    </label>\r\n                </div>\r\n                {loading1 ? (\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n\r\n                <div className=\"form-group mt-5\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        onClick={onSubmitHandle}\r\n                        className=\"btn btn-block\"\r\n                        style={{color: 'white', backgroundColor: ' #ff8903'}}>\r\n                        UPDATE PROFILE\r\n                    </button>\r\n                </div>\r\n                )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Checkout.jsx",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import { MdHome, MdLocationCity, MdPerson, MdPhoneAndroid } from \"react-icons/md\"\r\nimport HeaderNav from \"../Navigation/HeaderNav\"\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Checkbox, TextField } from \"@material-ui/core\";\r\nimport Moment from 'react-moment';\r\nimport { usePaystackPayment } from 'react-paystack';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Axios from \"axios\";\r\nimport Preloader from \"../ReuseableCompononts/Preloader\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nDate.prototype.addDays = function(days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}\r\n\r\n\r\nvar date = new Date();\r\n\r\nconst Checkout = (props) => {\r\n    const history = useHistory();\r\n    const [order_codes, setOrderCodes] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const [checkedMonday, setCheckedMonday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedTuesday, setCheckedTuesday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedWednesday, setCheckedWednesday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedThursday, setCheckedThursday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedFriday, setCheckedFriday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedSaturday, setCheckedSaturday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedSunday, setCheckedSunday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [first_time, setFirstTime] = useState(null)\r\n    const [second_time, setSecondTime] = useState(null)\r\n    const [config, setConfig] = useState({\r\n        reference: uuidv4(),\r\n        email: \"\",\r\n        amount: \"\",\r\n        metadata: {\r\n            customer: \"\",\r\n            email: \"\",\r\n            order_codes: []\r\n        },\r\n        publicKey: 'pk_live_09c5cb5a0db47dbe7a2c4488bb27fbb6f2f3109c',\r\n    })\r\n    const [user, setUser] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n    })\r\n    const [address, setAddress] = useState(\"\")\r\n    const [pickupLocation, setPickupLocation] = useState({\r\n        location: \"\",\r\n        code: \"\",\r\n        place: \"\"\r\n    })\r\n    const [placeId, setPlaceId] = useState(\"\")\r\n    const [cart, setCart] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [selected, setSelected] = useState(\"door_delivery\")\r\n    const [loadOrder, setLoadOrder] = useState(false)\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const days = [1, 2, 3, 4, 5, 6, 7]\r\n\r\n    const onSubmit = () => {\r\n        setLoadOrder(true)\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        // if(\"07:00\" > first_time){\r\n        //     notifyWarning(\"time must be after 6:59 AM\")\r\n        // }\r\n        // if(second_time > \"17:15\"){\r\n        //     notifyWarning(\"time must be before 5:15 PM\")\r\n        // }\r\n        // var dates = []\r\n        // var times = []\r\n        // if(checkedMonday.status){\r\n        //     dates.push(checkedMonday.date.toLocaleDateString('en-CA'))\r\n        // } if(checkedTuesday.status){\r\n        //     dates.push(checkedTuesday.date.toLocaleDateString('en-CA'))\r\n        // } if(checkedWednesday.status){\r\n        //     dates.push(checkedWednesday.date.toLocaleDateString('en-CA'))\r\n        // }if(checkedThursday.status){\r\n        //     dates.push(checkedThursday.date.toLocaleDateString('en-CA'))\r\n        // }if(checkedFriday.status){\r\n        //     dates.push(checkedFriday.date.toLocaleDateString('en-CA'))\r\n        // }if(checkedSaturday.status){\r\n        //     dates.push(checkedSaturday.date.toLocaleDateString('en-CA'))\r\n        // }if(checkedSunday.status){\r\n        //     dates.push(checkedSunday.date.toLocaleDateString('en-CA'))\r\n        // } if(first_time !== null){\r\n        //     times.push(first_time)\r\n        // }if(second_time !== null){\r\n        //     times.push(second_time)\r\n        // }\r\n        // if(checked && dates.length === 0){\r\n        //     notifyWarning(\"You must select at least one date\")\r\n        // }\r\n        // if(checked && times.length === 0){\r\n        //     notifyWarning(\"You must select at least one time\")\r\n        // }\r\n        // if(selected === \"door_delivery\" && address.length === 0) {\r\n        //     notifyWarning(\"address must not be empty\")\r\n        //     setLoadOrder(false)\r\n        // }\r\n        Axios.post(\"https://server.wakafoods.com/api/order/new\", {\r\n            delivery_type: selected,\r\n            pickup_code: pickupLocation.code,\r\n            place: placeId,\r\n            address,\r\n            // recurring: checked,\r\n            // recurring_dates: dates,\r\n            // recurring_times: times,\r\n            meals: parsedCart\r\n        }, {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setOrderCodes(res.data.order_codes)\r\n            setConfig({\r\n                ...config,\r\n                amount: res.data.order_total * 100,\r\n                metadata: {\r\n                    ...config.metadata,\r\n                    order_codes: res.data.order_codes\r\n                }\r\n            })\r\n            setTimeout(() => {\r\n                setLoadOrder(false)\r\n                setOpen1(true)\r\n            }, 2000);\r\n        })\r\n        .catch(() => {\r\n            setLoadOrder(false)\r\n            notifyWarning(\"An error occured.... Try again\")\r\n        })\r\n    }\r\n\r\n    const onSuccess = (reference) => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        localStorage.removeItem(\"cart\")\r\n        setOpen1(false)\r\n        setLoading(true)\r\n        Axios.get(`https://server.wakafoods.com/api/order/verify_payment?trxref=${config.reference}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then(() => {\r\n            setLoading(false)\r\n            notifySuccess(\"Order completed and payment successful\")\r\n            setOpen1(false)\r\n            history.push(\"/account/open\")\r\n        })\r\n      };\r\n    \r\n      // you can call this function anything\r\n      const onClose = () => {\r\n        Axios.get(`https://server.wakafoods.com/api/order/verify_payment?trxref=${config.reference}`)\r\n        .then(() => {\r\n            notifyWarning(\"Could not complete payment\")\r\n            setOpen1(false)\r\n            history.push(\"/account/open\")\r\n            setConfig({\r\n                ...config,\r\n                reference: uuidv4()\r\n            })\r\n        })\r\n      }\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleChangeMonday = (event, date) => {\r\n    setCheckedMonday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeTuesday = (event, date) => {\r\n    setCheckedTuesday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeWednesday = (event, date) => {\r\n    setCheckedWednesday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeThursday = (event, date) => {\r\n    setCheckedThursday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeFriday = (event, date) => {\r\n    setCheckedFriday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeSaturday = (event, date) => {\r\n    setCheckedSaturday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeSunday = (event, date) => {\r\n    setCheckedSunday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(typeof props.location.query !== \"undefined\"){\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        let door_delivery = localStorage.getItem(\"door_delivery\")\r\n        let parsedDoorDelivery = JSON.parse(door_delivery)\r\n        let pickup = localStorage.getItem(\"pickup\")\r\n        let parsedPickup = JSON.parse(pickup)\r\n        let option = localStorage.getItem(\"deliveryOption\")\r\n        let parsedOption = JSON.parse(option)\r\n        let place = localStorage.getItem(\"place\")\r\n        let parsedPlace = JSON.parse(place)\r\n        setPlaceId(parsedPlace)\r\n        if(parsedOption === \"door_delivery\"){\r\n            setAddress(parsedDoorDelivery)\r\n        }\r\n        if(parsedOption === \"pickup\"){\r\n            setPickupLocation(parsedPickup)\r\n        }\r\n        setSelected(parsedOption)\r\n        setCart(parsedCart)\r\n        Axios.get(\"https://server.wakafoods.com/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setConfig({\r\n                ...config,\r\n                email: res.data.details.email,\r\n                metadata: {\r\n                    ...config.metadata,\r\n                    email: res.data.details.email,\r\n                    customer: `${res.data.details.first_name} ${res.data.details.last_name}`\r\n                }\r\n            })\r\n            setUser({\r\n                first_name: res.data.details.first_name,\r\n                last_name: res.data.details.last_name,\r\n                title: res.data.details.title,\r\n                phone: res.data.details.phone,\r\n            })\r\n        })\r\n       \r\n        } else {\r\n            history.push(\"/cart\");\r\n        }\r\n    }, [])\r\n\r\n    const initializePayment = usePaystackPayment(config);\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav cart={true} />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {loading ? <Preloader /> : (\r\n\r\n            \r\n            <div className=\"my-5 container checkout-container\">\r\n                <div style={{height: \"100%\"}} className=\"row d-flex justify-content-center align-items-center\">\r\n                    <div className=\"col-lg-8 checkout p-2 shadow px-2 py-4\">\r\n                        <div className=\"container\">\r\n                            <h5>Delivery Summary</h5>\r\n                            <hr className=\"mt-3\" />\r\n\r\n                            <div className=\"mt-2 row\" >\r\n                                <div className=\"col-lg-1\"/>\r\n                                <div style={{border: \"1px solid gray\", backgroundColor: selected === \"door_delivery\" ? \"#ffeee3\" : \"white\"}} className=\"col-lg-5 cursor mr-lg-1\">\r\n                                    <div className=\"p-2\">\r\n                                        <h5 style={{color: \"#ff8903\"}}>Deliver to me</h5>\r\n                                        <hr className=\"mt-2\" />\r\n                                        <div className=\"mt-2\">\r\n                                            <div style={{fontSize: \"15px\"}}>\r\n                                                <MdPerson style={{color: \"#ff8903\", fontSize: \"17px\"}}/>{`   ${user.title} ${user.first_name} ${user.last_name}`}\r\n                                            </div>\r\n                                            <div className=\"mt-2\" style={{fontSize: \"15px\"}}>\r\n                                                <MdPhoneAndroid style={{color: \"#ff8903\", fontSize: \"17px\"}}/>{`   ${user.phone}`}\r\n                                            </div>\r\n                                            {address.length > 0 && (\r\n                                                <div className=\"my-3\">\r\n                                                    <input\r\n                                                        name=\"address\"\r\n                                                        value={address}\r\n                                                        disabled\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{border: \"1px solid gray\", backgroundColor: selected === \"pickup\" ? \"#ffeee3\" : \"white\"}} className=\"col-lg-5 cursor ml-lg-1 mt-3 mt-lg-0\">\r\n                                    <div className=\"p-1\">\r\n                                        <h6 style={{color: \"#ff8903\"}}>Selected Pickup Location</h6>\r\n                                        <hr className=\"mt-2\" />\r\n                                        <div className=\"mt-2\">\r\n                                            <div style={{fontSize: \"15px\"}}>\r\n                                                <MdHome style={{color: \"#ff8903\", fontSize: \"17px\"}}/>{`   ${pickupLocation.location}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-1\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-1\">\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-3 mt-3 mt-lg-0 p-2\">\r\n                        <div>\r\n                            {/* <h5>Order Options</h5>\r\n                            <hr className=\"mt-3\" />\r\n                            <div className=\"mt-2 p-1\" style={{display: \"flex\", alignItems: \"center\", border: \"1px solid gray\"}}>\r\n                                <Checkbox\r\n                                    checked={checked}\r\n                                    onChange={handleChange}\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                />\r\n                                <div className=\"ml-2\">Add to reoccuring order?</div>\r\n                            </div> */}\r\n                            {/* {checked && (\r\n                                <div className=\"mt-3\">\r\n                                    <h6 style={{color: \"#ff8903\"}}>Choose delivery days</h6>\r\n                                    <hr className=\"mt-2\" />\r\n                                    {days.map((data, index) => (\r\n                                        <div className=\"mt-1 p-1\" style={{display: \"flex\", alignItems: \"center\", border: \"1px solid gray\"}}>\r\n                                            <Checkbox\r\n                                                checked={\r\n                                                    data === 1 ? checkedMonday.status : data === 2 ? checkedTuesday.status : data === 3 ? checkedWednesday.status : data === 4 ? checkedThursday.status : data === 5 ? checkedFriday.status : data === 6 ? checkedSaturday.status : checkedSunday.status\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    data === 1 ? handleChangeMonday(e, date.addDays(1)) : data === 2 ? handleChangeTuesday(e, date.addDays(2)) : data === 3 ? handleChangeWednesday(e, date.addDays(3)) : data === 4 ? handleChangeThursday(e, date.addDays(4)) : data === 5 ? handleChangeFriday(e, date.addDays(5)) : data === 6 ? handleChangeSaturday(e, date.addDays(6)) : handleChangeSunday(e, date.addDays(7))\r\n                                                }\r\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                            />\r\n                                            <div style={{fontSize: \"13px\"}} className=\"ml-2\">\r\n                                                <Moment format=\"YYYY/MM/DD\">\r\n                                                    {date.addDays(data)}\r\n                                                </Moment>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                    <div className=\"mt-2\">\r\n                                        <h6 style={{color: \"#ff8903\"}}>Choose delivery times (7:05 AM to 5:15 PM</h6>\r\n                                        <div style={{fontSize: \"13px\"}}>First Time (Leave empty if not applicable)</div>\r\n                                        <input\r\n                                            name=\"first_time\"\r\n                                            onChange={e => setFirstTime(e.target.value)}\r\n                                            type=\"time\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        <div style={{fontSize: \"13px\"}}>Second Time (Leave empty if not applicable)</div>\r\n                                        <input\r\n                                            name=\"second_time\"\r\n                                            onChange={e => setSecondTime(e.target.value)}\r\n                                            type=\"time\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )} */}\r\n                            {loadOrder ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"mt-3\">\r\n                                <button onClick={onSubmit} className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#ff8903\", border: \"none\", color: \"white\", fontWeight: \"bold\", fontSize: \"19px\"}}>CONTINUE TO ORDER</button>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n            {/* FOR PICKUP LOCATION SELECTION */}\r\n            {/* <Dialog\r\n                fullWidth\r\n                open={open}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-cart\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <h6 style={{color: '#ff8903'}} className=\"modal-title\" id=\"exampleModalCenterTitle\">\r\n                        Select Location\r\n                    </h6>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-cart\">                                \r\n                        <div>\r\n                            {pickupLocation.data.map((data) => (\r\n                                <div key={data.id} onClick={() => handlePickup(data.code, data)} style={{border: \"1px gray solid\", fontSize: \"14px\"}} className=\"p-2 hover-location cursor mt-2\" >\r\n                                    {data.address}, {data.place.name}, {data.name}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} style={{color: \"#ff8903\", fontWeight: \"550\"}}>\r\n                    CLOSE\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog> */}\r\n\r\n\r\n            {/* PAYMENT */}\r\n            <Dialog\r\n                fullWidth\r\n                open={open1}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-cart\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-cart\">                                \r\n                        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}} className=\"mt-3\">\r\n                            <button className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#ff8903\", border: \"none\", color: \"white\", fontWeight: \"bold\"}} onClick={() => {\r\n                                initializePayment(onSuccess, onClose)\r\n                            }}>CONTINUE TO PAYMENT</button>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\Cart.jsx",["208","209"],"import { TextareaAutosize } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Naira from \"react-naira\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderNav from \"../../Navigation/HeaderNav\";\r\nimport Preloader from \"../../ReuseableCompononts/Preloader\";\r\nimport CartItem from \"./CartItem\";\r\n\r\n\r\nconst Cart = (props) => {\r\n    const [cart, setCart] = useState([])\r\n    const [carts, setCarts] = useState([])\r\n    const [item, setItem] = useState({})\r\n    const [token, setToken] = useState(undefined)\r\n    const [loading, setLoading] = useState(true)\r\n    const [press, setPress] = useState(0)\r\n    const [location, setLocation] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(press > 0){\r\n            if(carts.length > 0){\r\n                localStorage.setItem(\"cart\", JSON.stringify(carts))\r\n            } else {\r\n                localStorage.removeItem(\"cart\")\r\n            }\r\n        }\r\n    }, [press])\r\n\r\n    useEffect(() => {\r\n        let cartItem = localStorage.getItem(\"cart\")\r\n        let tokenn = localStorage.getItem(\"token\")\r\n        let locationItem = localStorage.getItem(\"location\")\r\n        let parsedLocation = JSON.parse(locationItem)\r\n        let parsedCartItem = JSON.parse(cartItem)\r\n        let parsedToken = JSON.parse(tokenn)\r\n        setToken(parsedToken)\r\n        setCarts(parsedCartItem)\r\n        if(parsedLocation){\r\n            setLocation(true)\r\n        }\r\n        if(parsedCartItem !== undefined){\r\n            if(typeof parsedToken === \"string\"){\r\n                Axios.post(\"https://server.wakafoods.com/api/cart/sync\", {items: parsedCartItem}, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${parsedToken}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                        Accept: \"application/json\",\r\n                      }\r\n                }).then((res) => {\r\n                    setCart(res.data.cart.items)\r\n                    setItem(res.data.cart)\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    \r\n                })\r\n            } else {\r\n                Axios.post(\"https://server.wakafoods.com/api/cart/sync\", {items: parsedCartItem})\r\n                .then((res) => {\r\n                    setCart(res.data.cart.items)\r\n                    setItem(res.data.cart)\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    \r\n                })\r\n            }\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <HeaderNav cart={true}/>\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"my-5 container bg-white p-2\">\r\n                    <h1 style={{fontSize: \"26px\"}} >CART ({loading ? 0 : cart.length})</h1>\r\n                    <div className=\"mt-5\">\r\n                    {cart.map((data, index) => (\r\n                        <CartItem setPress={setPress} press={press} carts={carts} setCarts={setCarts} setCart={setCart} token={token} total={item.total} key={index} cart={data} />\r\n                    ))}\r\n                    </div>\r\n                    {cart.length > 0 && (\r\n                        <div className=\"mt-5\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                            <div style={{fontWeight: \"bold\"}}>TOTAL:</div>\r\n                            <div style={{color: \"#ff8903\", fontSize: \"24px\", fontWeight: \"bold\"}} className=\"ml-5 mr-md-4\"><Naira>{item.total}</Naira></div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"mt-5 shadow\">\r\n                        <div className=\"p-4\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                            <Link to=\"/\">\r\n                                <button style={{color: \"#ff8903\", backgroundColor: \"white\", border: \"none\"}} className=\"btn shadow px-3 py-2\">\r\n                                    CONTINUE SHOPPING\r\n                                </button>\r\n                            </Link>\r\n                            {cart.length > 0 && (\r\n                                <Link to={{pathname: `${location ? \"/checkout\" : \"/\"}`, query: {price: item.total, location: true}}}>\r\n                                    <button style={{color: \"white\", backgroundColor: \"#ff8903\", border: \"none\"}} className=\"btn ml-4 shadow px-3 py-2\">\r\n                                        GO TO CHECKOUT\r\n                                    </button>\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signin.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signup.jsx",["210"],"import {useState} from 'react';\r\nimport {signup} from '../../Redux/actions';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignUp(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, error} = userSignin;\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const {email, password, first_name, last_name, title, phone} = formData;\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        dispatch(signup(formData)).then(() => {}).then(() => {\r\n                let token = localStorage.getItem(\"token\")\r\n                if(typeof token === \"string\"){\r\n                    props.history.push('/account');\r\n                }\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <div className=\"login container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\", paddingTop: \"50px\", paddingBottom: \"50px\"}}>\r\n            <div className=\"card border-0 shadow login-form\" style={{backgroundColor: '#ff8903'}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"first_name\">\r\n                                    First Name\r\n                                </label>\r\n                                <input\r\n                                    id=\"first_name\"\r\n                                    value={first_name}\r\n                                    name=\"first_name\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.first_name}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"last_name\">\r\n                                    Last Name\r\n                                </label>\r\n                                <input\r\n                                    id=\"last_name\"\r\n                                    value={last_name}\r\n                                    name=\"last_name\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.last_name}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"title\">Title</label>\r\n                                <select value={title} id=\"title\" name=\"title\" onChange={e => onChangeHandler(e)} className=\"form-control\" id=\"title\">\r\n                                    <option value=\"Mr\">Mr</option>\r\n                                    <option value=\"Ms\">Ms</option>\r\n                                </select>\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.title}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"number\">\r\n                                    Phone Number\r\n                                </label>\r\n                                <input\r\n                                    id=\"number\"\r\n                                    value={phone}\r\n                                    name=\"phone\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.phone}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    id=\"email\"\r\n                                    value={email}\r\n                                    name=\"email\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.identifier}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.email}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.username}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"password\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    name=\"password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors && error.errors.password}</p>}\r\n                            </div>\r\n                            {loading ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    SIGN UP\r\n                                </button>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group col-md-12\">\r\n                                <Link to={{\r\n                                    pathname: '/signin',\r\n                                    state: { cart: props.location.state && props.location.state.cart ? true : false }\r\n                                    }} className=\"btn\" style={{color: '#023a9c', fontWeight: 'bold'}}>\r\n                                    Already a User? Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LandingPage.jsx",["211","212","213","214","215","216","217","218"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../../Navigation/HeaderNav';\r\nimport FoodMenu from '../meal/index'\r\nimport FailModal from './FailModal';\r\nimport SuccessModal from './SuccessModal';\r\nimport WelcomeModal from './WelcomeModal';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Preloader from '../../ReuseableCompononts/Preloader';\r\nimport { FaArrowCircleDown, FaArrowCircleUp, FaTable, FaUtensils, FaUtensilSpoon } from \"react-icons/fa\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\nimport Bg from './Bg';\r\nimport CatItems from './CatItems';\r\nimport Footer from '../../Navigation/Footer';\r\nimport BookTable from './BookTable';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function LandingPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const done = useSelector(state => state.done);\r\n\r\n    const [states, setStates] = useState([])\r\n    const [open, setOpen] = useState(true)\r\n    const [openFail, setOpenFail] = useState(false)\r\n    const [openSuccess, setOpenSuccess] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [persons, setPersons] = useState([\"\"])\r\n    const [person, setPerson] = useState(\"\")\r\n    const [numberOfPersons, setNumberOfPersons] = useState([])\r\n    const [step, setStep] = useState(1)\r\n    const [location, setLocation] = useState(false)\r\n    const [meals, setMeals] = useState([])\r\n    const [token, setToken] = useState(\"\")\r\n    const [initialCart, setInitialCart] = useState([])\r\n    const [finish, setFinish] = useState(false)\r\n    const [cartSize, setCartSize] = useState(0)\r\n    const [tabValue, setTabValue] = React.useState(0);\r\n    const [categoryTab, setCategoryTab] = useState(false)\r\n    const [isLuck, setIsLuck] = useState(false)\r\n    const [pickupLocation, setPickupLocation] = useState({})\r\n    const handleChangeTab = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n    const [modalTime, setModalTime] = useState(false)\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.warning(text);\r\n\r\n    const changePerson = () => {\r\n        setPerson(persons[step])\r\n        setStep(step + 1)\r\n    }\r\n    const changePerson1 = () => {\r\n        setPerson(numberOfPersons[step])\r\n        setStep(step + 1)\r\n    }\r\n\r\n    const handleAddCart = async (data) => {\r\n        let storedCart = localStorage.getItem(\"cart\")\r\n        let parsedStoredCart = JSON.stringify(storedCart)\r\n        localStorage.setItem(\"cart\", JSON.stringify([\r\n            ...initialCart,\r\n            {...data, name: person}\r\n        ]))\r\n        setInitialCart([\r\n            ...initialCart,\r\n            {...data, name: person}\r\n        ])\r\n        // if(token === undefined || token === null){\r\n        //     localStorage.setItem(\"cart\", JSON.stringify([\r\n        //         ...initialCart,\r\n        //         {...data, name: person}\r\n        //     ]))\r\n        // } else {\r\n        //     Axios.post(\"https://server.wakafoods.com/api/cart/new\", {\r\n        //         ...data,\r\n        //         name: person ? person : \"John Doe\"\r\n        //     }, {\r\n        //         headers: {\r\n        //             Authorization: `Bearer ${token}`,\r\n        //             \"Content-Type\": \"application/json\",\r\n        //             Accept: \"application/json\",\r\n        //           },\r\n        //     })\r\n        //     .then((res) => {\r\n        //         localStorage.setItem(\"cart\", JSON.stringify([\r\n        //             ...initialCart,\r\n        //             {...data, name: person}\r\n        //         ]))\r\n        //         setInitialCart([\r\n        //             ...initialCart,\r\n        //             {...data, name: person}\r\n        //         ])\r\n        //     })\r\n        //     .catch((e) => {})\r\n        // }\r\n        notifySuccess(`Meal added to cart`)\r\n        setCartSize(cartSize + 1)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.location.query === \"undefined\"){\r\n            notifyWarning(\"Select Your location\")\r\n            setOpen(true)\r\n            setSuccess(false)\r\n        }\r\n        let location = localStorage.getItem(\"location\")\r\n        let parsedLocation = JSON.parse(location)\r\n        let token = localStorage.getItem(\"token\")\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        setFinish(done.done)\r\n        setToken(token)\r\n        if(parsedCart === undefined || parsedCart === null){\r\n            setInitialCart([])\r\n        } else {\r\n            setInitialCart(parsedCart)\r\n            setCartSize(parsedCart.length)\r\n        }\r\n        // if(parsedLocation){\r\n        //     setLocation(true)\r\n        //     setOpenSuccess(true)\r\n        //     setOpen(false)\r\n        // } \r\n        Axios.get(\"https://server.wakafoods.com/api/place/list\")\r\n        .then((res) => {\r\n            setStates(res.data.places)\r\n        })\r\n\r\n        Axios.get(\"https://server.wakafoods.com/api/meal/list\")\r\n        .then((res) => {\r\n            setMeals(res.data.data)\r\n        })\r\n        setTimeout(() => {\r\n            setModalTime(true)\r\n        }, 10000)\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            let names = localStorage.getItem(\"names\")\r\n            let parsedNames = JSON.parse(names)\r\n            setPersons(parsedNames)\r\n            setPerson(parsedNames[0])\r\n            if(parsedNames.length === 1){\r\n                for(var i = 1; i <= new Array(parsedNames[0]).length; i++){\r\n                    numberOfPersons.push(i)\r\n                }\r\n                setPerson(numberOfPersons[0])\r\n            }\r\n        }\r\n    }, [success])\r\n\r\n    return (\r\n        <div id=\"home-screen\">\r\n            <HeaderNav cartSize={cartSize} home={true} setSuccess={setSuccess} setOpen={setOpen}/>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Bg />\r\n            {!finish && (\r\n                <div>\r\n                    {states.length > 0 && modalTime && !openFail && !openSuccess && open && (\r\n                        <WelcomeModal setLocation={setPickupLocation} setIsLuck={setIsLuck} setSuccess={setSuccess} open={open} openFail={openFail} setOpenFail={setOpenFail} openSuccess={openSuccess} setOpenSuccess={setOpenSuccess} setOpen={setOpen} states={states} {...props} />\r\n                    )}\r\n                    {openFail && !openSuccess && (\r\n                        <FailModal notifyWarning={notifyWarning} open={open} openFail={openFail} setOpenFail={setOpenFail} openSuccess={openSuccess} setOpenSuccess={setOpenSuccess} setOpen={setOpen} />\r\n                    )}\r\n                    {!openFail && openSuccess && pickupLocation.slug && (\r\n                        <SuccessModal setSuccess={setSuccess} setOpen={setOpen} pickupLocation={pickupLocation} isLuck={isLuck} notifySuccess={notifySuccess} location={location} openFail={openFail} setOpenFail={setOpenFail} openSuccess={openSuccess} setOpenSuccess={setOpenSuccess} setOpen={setOpen} />\r\n                    )}\r\n                </div>\r\n            )}\r\n            <div id=\"meals\">\r\n                {/* <!--============ THE FOOD LISTING ==========--> */}\r\n                <div style={{width: \"100%\"}} className=\"container\">\r\n                    <h4 className=\"py-5 text-center\" style={{color: \"#ff8903\"}}>{success ? persons.length > 1 ? `For ${person}` : `For Person ${step}` : \"\"}</h4>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {meals.length > 0 ? (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-2\">\r\n                                        <div className=\"d-none d-lg-block\">\r\n                                            <h6><FaUtensils /> Categories</h6>\r\n                                            <CatItems meals={meals} />\r\n                                        </div>\r\n                                        <div className=\"d-lg-none pb-3\">\r\n                                            <div onClick={() => setCategoryTab(!categoryTab)} style={{width: \"100%\"}} className=\"bg-white cursor p-2 d-flex justify-content-around align-items-center\">\r\n                                               <div style={{color: \"gray\"}}>Categories</div>\r\n                                               <div>{categoryTab ? <FaArrowCircleUp color=\"gray\" /> : <FaArrowCircleDown color=\"gray\" /> }</div>\r\n                                            </div>\r\n                                            {categoryTab && <CatItems meals={meals} />}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-10\">\r\n                                        <div className=\"d-flex justify-content-start align-items-center pb-3\">\r\n                                            <div className=\"py-3 px-5 cursor\" style={{fontWeight: \"bold\", color: tabValue === 0 ? \"#ff8903\" : \"gray\", backgroundColor: tabValue === 0 ? \"white\" : \"transparent\"}} onClick={(e) => handleChangeTab(e, 0)}><FaUtensilSpoon />  Menu</div>\r\n                                            <div className=\"py-3 px-5 cursor\" style={{fontWeight: \"bold\", color: tabValue === 1 ? \"#ff8903\" : \"gray\", backgroundColor: tabValue === 1 ? \"white\" : \"transparent\"}} onClick={(e) => handleChangeTab(e, 1)}><FaTable />  Book an Engagement</div>\r\n                                        </div>\r\n                                        {tabValue === 0 && (\r\n                                            <FoodMenu notifySuccess={notifySuccess} handleAddCart={handleAddCart} person={person} meals={meals} />\r\n                                        )}\r\n                                        {tabValue === 1 && (\r\n                                            <BookTable notifySuccess={notifySuccess} notifyWarning={notifyWarning} token={token} />\r\n                                        )}\r\n                                        <div className=\"mt-4 pb-5\">\r\n                                            {persons.length > 1 && step !== persons.length && (\r\n                                                <button onClick={changePerson} className=\"btn btn-style btn-lg\">NEXT PERSON</button>\r\n                                            )}\r\n                                            {persons.length === 1 && step < numberOfPersons.length && (\r\n                                                <button onClick={changePerson1} className=\"btn btn-style btn-lg\">NEXT PERSON</button>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"mb-5\">\r\n                                            {tabValue === 0 && (\r\n                                                <Link to=\"/cart\" className=\"nav-item\">\r\n                                                    <button className=\"btn\" style={{color: \"white\", backgroundColor: \"#ff8903\"}}>CONTINUE TO CART</button>\r\n                                                </Link>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <Preloader home={true} />\r\n                            )}\r\n                            \r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\reducers.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\actions.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\ReuseableCompononts\\Preloader.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\CartItem.jsx",["219"],"\r\nimport Naira from \"react-naira\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst CartItem = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const remove = async () => {\r\n        props.setCart(carts => carts.filter(cartt => cartt.id !== props.cart.id));\r\n        props.setCarts(carts => carts.filter(cartt => cartt.id !== props.cart.id));\r\n        notifySuccess(\"Cart item removed\")\r\n        props.setPress(props.press + 1)\r\n    }\r\n\r\n    const removeCart = async () => {\r\n        setLoading(true)\r\n        if(typeof props.token === \"string\"){\r\n            Axios.post(\"https://server.wakafoods.com/api/cart/remove\", {id: props.cart.id}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${props.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  }\r\n            })\r\n            .then((res) => {\r\n                setLoading(false)\r\n                remove()\r\n            })\r\n            .catch(() => {\r\n                setLoading(false)\r\n                notifyWarning(\"Something went wrong!\")\r\n            })\r\n        } else {\r\n            remove()\r\n            setLoading(false) \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: \"white\"}} className=\"card p-3 mt-4 shadow border-0\">\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3\">\r\n                    <img  alt=\"photo\" style={{width: '100%', height: '120px', objectFit: \"contain\"}} src={props.cart.meal.image} />\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"100%\"}}>\r\n                        <div>\r\n                            <div className=\"mt-3 mt-lg-0\">\r\n                                <h6>{props.cart.meal.name}</h6>\r\n                            </div>\r\n                            <div className=\"mt-2\" style={{color: \"gray\", fontSize: \"13px\"}} >For: {typeof props.cart.name === \"number\" ? `person ${props.cart.name}` : props.cart.name }</div>\r\n                        </div>\r\n                        <div className=\"mt-2 d-none d-lg-block\">\r\n                            {loading ? (\r\n                                <div className=\"spinner-grow\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            ) : (\r\n                                <div onClick={removeCart} style={{color: \"#ff8903\", fontWeight: \"bold\", fontSize: \"13px\"}} className=\"cursor\">\r\n                                    <MdDeleteForever style={{color: \"#ff8903\", fontSize: \"20px\"}}/> REMOVE\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff8903\", fontWeight: \"bold\"}}>\r\n                        MEAL PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.meal.price}</Naira>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff8903\", fontWeight: \"bold\"}}>\r\n                        EXTRAS PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.sub_total - Number(props.cart.meal.price)}</Naira>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff8903\", fontWeight: \"bold\"}}>\r\n                        TOTAL PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.sub_total}</Naira>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-2 d-block d-lg-none\">\r\n                    {loading ? (\r\n                        <div className=\"spinner-grow\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div onClick={removeCart} style={{color: \"#ff8903\", fontWeight: \"bold\", fontSize: \"15px\"}} className=\"cursor\">\r\n                            <MdDeleteForever style={{color: \"#ff8903\", fontSize: \"25px\"}}/> REMOVE\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\WelcomeModal.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\SuccessModal.jsx",["220","221","222"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n\tDONE\r\n} from \"../../../Redux/types\"\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor: \"#ff8903\"\r\n    }\r\n  };\r\n\r\nconst SuccessModal = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [step, setStep] = useState(1)\r\n    const [number, setNumber] = useState(1)\r\n    const [names, setNames] = useState({})\r\n    const [numberOfPersons, setNumberOfPersons] = useState([])\r\n    const [isoptionAvailable, setIsoptionAvailable] = useState(false);\r\n    const [address, setAddress] = useState(\"\")\r\n    const [pickupLocation, setPickupLocation] = useState({\r\n        data: [],\r\n        location: \"\",\r\n        code: \"\",\r\n        place: \"\"\r\n    })\r\n    const [delivery, setDelivery] = useState(\"\")\r\n    const [isStep1Done, setIsStep1Done] = useState(false)\r\n    const [availableOption, setAvailableOption] = useState(\"\")\r\n    const [isDoorDelivery, setIsDoorDelivery] = useState(true)\r\n    const [isPickupDelivery, setIsPickupDelivery] = useState(true)\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://server.wakafoods.com/api/avail_pickup/${props.pickupLocation.slug}/list`)\r\n        .then((res) => {\r\n            setPickupLocation({\r\n                ...pickupLocation,\r\n                data: res.data.pickup_locations\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const handleAddress = () => {\r\n        localStorage.setItem(\"door_delivery\", JSON.stringify(address))\r\n        setIsStep1Done(true)\r\n    }\r\n\r\n    const handlePickup = (code, data) => {\r\n        setPickupLocation({\r\n            ...pickupLocation,\r\n            location: `${data.address}, ${data.place.name}, ${data.name}`,\r\n            code: code,\r\n            place: data.place.id\r\n        })\r\n        localStorage.setItem(\"pickup\", JSON.stringify({\r\n            location: `${data.address}, ${data.place.name}, ${data.name}`,\r\n            code: code,\r\n        }))\r\n        setIsStep1Done(true)\r\n    }\r\n\r\n    const cancel = () => {\r\n            localStorage.removeItem(\"names\")\r\n            localStorage.setItem(\"names\", JSON.stringify([1]))\r\n            props.setSuccess(true)\r\n            continue2()\r\n            props.notifySuccess(\"You're shopping for 1 person\")\r\n    }\r\n    \r\n    const continue1 = () => {\r\n        setStep(3)\r\n        if(number > 1){\r\n            for(var i = 1; i <= new Array(Number(number)).length; i++){\r\n                numberOfPersons.push(i)\r\n            }\r\n        } else {\r\n            localStorage.removeItem(\"names\")\r\n            localStorage.setItem(\"names\", JSON.stringify([1]))\r\n            props.setSuccess(true)\r\n            continue2()\r\n            props.notifySuccess(\"You're shopping for 1 person\")\r\n        }\r\n    }\r\n\r\n    const continue2 = () => {\r\n        props.setOpenSuccess(false)\r\n        props.setOpenFail(false)\r\n        props.setOpen(false)\r\n        dispatch({ type: DONE });\r\n    }\r\n\r\n    const onChange = (e, index) => {\r\n        setNames({\r\n            ...names,\r\n            [index]: e.target.value\r\n        })\r\n    }\r\n\r\n    const option = (option) => {\r\n        localStorage.setItem(\"deliveryOption\", JSON.stringify(option))\r\n        if(option === \"door_delivery\" && !props.pickupLocation.delivery_available){\r\n            setIsDoorDelivery(false)\r\n            setIsPickupDelivery(true)\r\n        } else if (option === \"pickup\" && !props.pickupLocation.pickup_available) {\r\n            setIsPickupDelivery(false)\r\n            setIsDoorDelivery(true)\r\n        }\r\n        else {\r\n            setIsoptionAvailable(true)\r\n            setAvailableOption(option)\r\n            setDelivery(option)\r\n        }\r\n    }\r\n\r\n    const option2 = (option) => {\r\n        if(option === \"continue\") {\r\n            setStep(2)\r\n        } else {\r\n            props.setOpen(true)\r\n            props.setSuccess(false)\r\n            props.setOpenSuccess(false)\r\n            setIsDoorDelivery(true)\r\n            setIsPickupDelivery(true)\r\n            setStep(1)\r\n        }\r\n    }\r\n\r\n    const done1 = () => {\r\n        localStorage.setItem(\"names\", JSON.stringify([Number(number)]))\r\n        props.setSuccess(true)\r\n        props.notifySuccess(`You're shopping for ${number} persons`)\r\n        continue2()\r\n    }\r\n\r\n    const done = () => {\r\n        localStorage.setItem(\"names\", JSON.stringify(Object.values(names)))\r\n        props.setSuccess(true)\r\n        props.notifySuccess(`You're shopping for ${number} persons`)\r\n        continue2()\r\n    }\r\n\r\n    const handleNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={props.openSuccess}\r\n            onRequestClose={() => null}\r\n            style={customStyles}\r\n            contentLabel=\"Success\"\r\n        >\r\n            {step === 1 && (\r\n                <div>\r\n                    {!isoptionAvailable ? (\r\n                        <div>\r\n                            {isDoorDelivery && (\r\n                                <div>\r\n                                    {!props.isLuck ? (\r\n                                        <div className=\"py-5 white\">\r\n                                            Choose an option below……\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                            {isPickupDelivery && (\r\n                                                <div className=\"py-5 white\">\r\n                                                    Wow! you are in luck, choose an option below……\r\n                                                </div> \r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            <div>\r\n                                {!isDoorDelivery && (\r\n                                    <p style={{color: \"white\"}}>Delivery Option isn't available in your location yet. Please select another option</p>\r\n                                )}\r\n                                {!isPickupDelivery && (\r\n                                    <p style={{color: \"white\"}}>Pickup Option isn't available in your location yet. Please select another option</p>\r\n                                )}\r\n                                <div className=\"d-flex justify-content-around align-items-center p-4\">\r\n                                    <button onClick={() => option(\"door_delivery\")} className=\"btn btn-sm modal-btn\">Delivery</button>\r\n                                    {(!isDoorDelivery || !isPickupDelivery) && (\r\n                                        <button onClick={() => option2(\"reset\")} className=\"btn btn-sm modal-btn mr-2\">Reset</button>\r\n                                    )}\r\n                                    <button onClick={() => option(\"pickup\")} className=\"btn btn-sm modal-btn\">Pickup</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            {availableOption === \"door_delivery\" && !isStep1Done && (\r\n                                <div className=\"p-5\">\r\n                                    <textarea\r\n                                        name=\"address\"\r\n                                        onChange={e => setAddress(e.target.value)}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"your delivery address\"\r\n                                        required\r\n                                    />\r\n                                    <button onClick={handleAddress} className=\"btn btn-sm modal-btn mt-2\">Continue</button>\r\n                                </div>\r\n                            )}\r\n                            {availableOption === \"pickup\" && !isStep1Done && (\r\n                                <div className=\"my-3\">\r\n                                    <h5 style={{color: \"white\"}}>Please select a pickup location below</h5>\r\n                                    {pickupLocation.data.map((data) => (\r\n                                        <div key={data.id} onClick={() => handlePickup(data.code, data)} style={{border: \"1px white solid\", fontSize: \"14px\", color: \"white\"}} className=\"p-2 hover-location cursor mt-2\" >\r\n                                            {data.address}, {data.place.name}, {data.name}\r\n                                            <span className=\"location-pointer\">deh</span>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            {isStep1Done && (\r\n                                <div className=\"p-2\">\r\n                                    <p style={{color: \"white\"}}>Great! {delivery} option is available in your location. Press reset to restart the checker or continue with your order...</p>\r\n                                    <div className=\"p-4 d-flex justify-content-around align-items-center\">\r\n                                        <button onClick={() => option2(\"reset\")} className=\"btn btn-sm modal-btn mr-2\">Reset</button>\r\n                                        <button onClick={() => option2(\"continue\")} className=\"btn btn-sm modal-btn\">Continue</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n            {step === 2 && (\r\n                <div>\r\n                    <div className=\"py-3 white\">\r\n                        How many persons are you ordering for?\r\n                    </div>\r\n                    <div>\r\n                        <input value={number} name=\"number\" onChange={handleNumber} type=\"number\" className=\"form-control\" />\r\n                        <button onClick={continue1} className=\"btn btn-sm modal-btn mt-4 d-inline\">Continue</button>\r\n                        <button onClick={cancel} className=\"btn btn-sm modal-btn mt-4 d-inline ml-2\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {step === 3 && number > 1 && (\r\n                <div>\r\n                    <div className=\"py-3 white\">\r\n                        Click the button below to customise your orders\r\n                    </div>\r\n                    <div>\r\n                        {/* <button onClick={done1} className=\"btn btn-primary mt-4\">No</button> */}\r\n                        <button onClick={() => setStep(4)} className=\"btn modal-btn mt-4 ml-2\">CUSTOMISE</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {step === 4 && (\r\n                <div style={{height: \"70vh\", overflowY: \"scroll\"}} className=\"pl-2 pr-4\">\r\n                    <h4 className=\"white\">Please enter the name of the {number} persons</h4>\r\n                    {numberOfPersons.map((data, index) => (\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"white\">Person {data}</label>\r\n                            <input name=\"text\" onChange={(e) => onChange(e, index)} type=\"text\" className=\"form-control\" placeholder=\"Mark Essien\" />\r\n                        </div>\r\n                    ))}\r\n                    <button onClick={() => done()} className=\"btn btn-sm modal-btn mt-4\">Continue</button>\r\n                </div>\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\FailModal.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\HeaderNav.jsx",["223","224"],"import { useEffect, useState } from 'react'\r\nimport {BiMenuAltRight} from \"react-icons/bi\"\r\nimport {MdAddLocation, MdShoppingCart} from \"react-icons/md\"\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n    USER_LOGOUT,\r\n    REFRESH\r\n} from \"../../Redux/types\"\r\n\r\nexport default function HeaderNav(props) {\r\n    const [token, setToken] = useState(null)\r\n    const [cart, setCart] = useState(0)\r\n    const dispatch = useDispatch();\r\n    let history = useHistory()\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        dispatch({ type: USER_LOGOUT });\r\n        setToken(null)\r\n        history.push(\"/signin\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.cartSize){\r\n            setCart(props.cartSize)\r\n        }\r\n    }, [props.cartSize])\r\n\r\n    useEffect(() => {\r\n        let tok = localStorage.getItem(\"token\")\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        setToken(tok)\r\n        if(parsedCart !== undefined && parsedCart !== null){\r\n            setCart(parsedCart.length)\r\n        }\r\n    }, [])\r\n\r\n    const changeLocation = () => {\r\n        dispatch({ type: REFRESH });\r\n        props.setOpen(true)\r\n        props.setSuccess(false)\r\n    }\r\n    return (\r\n        <div>\r\n               {/* ============ NAVBAR SECTION==========  */}\r\n        <nav className=\"navbar navbar-expand-lg py-2\">\r\n            <Link to=\"/\" className=\"navbar-brand\"> <img style={{borderRadius: \"4px\"}} alt=\"logo\" src=\"/logo.jpg\" /></Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <BiMenuAltRight style={{color: \"white\", fontSize: \"30px\"}}/>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                \r\n                    {typeof token === \"string\" && (\r\n                    <Link to=\"/account\" className=\"nav-item\">\r\n                        <a className=\"nav-link text-white\">My Account</a>\r\n                    </Link>\r\n                     )}\r\n                    {typeof token === \"string\" && (\r\n                        <div onClick={handleLogout} className=\"nav-item cursor\">\r\n                            <div className=\"nav-link text-white\">Log Out</div>\r\n                        </div>\r\n                    )}\r\n                    {typeof token !== \"string\" && (\r\n                        <Link to=\"/signin\" className=\"nav-item\">\r\n                            <div className=\"nav-link text-white\">Sign In</div>\r\n                        </Link>\r\n                    )}\r\n                    {typeof token !== \"string\" && (\r\n                    <Link to=\"/signup\" className=\"nav-item\">\r\n                        <div className=\"nav-link text-white\">Sign Up</div>\r\n                    </Link>\r\n                    )}\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    {props.setOpen && props.home && (\r\n                        <div className=\"nav-item cursor\">\r\n                            <div onClick={changeLocation} className=\"nav-link text-white\">\r\n                                <MdAddLocation style={{color: \"#ff8903\", fontSize: \"1.5em\"}}/> change location\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {!props.cart && (\r\n                        <Link to=\"/cart\" className=\"nav-item\">\r\n                            <a className=\"nav-link text-white\">\r\n                                <MdShoppingCart style={{color: \"#ff8903\", fontSize: \"1.5em\"}}/> {cart} items\r\n                            </a>\r\n                        </Link>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        {/* ============ NAVBAR SECTION ENDS HERE==========  */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\index.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\types.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LocationDropdown.jsx",["225","226"],"import Axios from \"axios\"\r\nimport { useState } from \"react\"\r\n\r\nconst LocationDropdown = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const onChange = async (e) => {\r\n        setLoading(true)\r\n        let selectedPlace = await props.states.filter((place) => place.id == e.target.value)\r\n        props.setPlace({\r\n            ...selectedPlace[0]\r\n        })\r\n        setLoading(false)\r\n        localStorage.setItem(\"place\", JSON.stringify(selectedPlace[0].id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <div className=\"spinner-grow text-center\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <label htmlFor=\"locationDropdown\" className=\"white\">Select Location</label>\r\n                        <select className=\"form-control cursor\" onChange={onChange}>\r\n                            <option value=\"\">Pick a city...</option>\r\n                            {props.states.map((data) => (\r\n                                <option className=\"cursor\" key={data.slug} value={data.id}>{data.name}</option>\r\n                            ))}\r\n                        </select>        \r\n                </div>\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationDropdown","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Categories.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\SubCategory.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Meal.jsx",["227","228"],"import Naira from 'react-naira'\r\nimport ItemDetail from './ItemDetail';\r\nimport AddToCart from './AddToCart';\r\nimport { useState } from 'react';\r\nimport parse from 'html-react-parser';\r\n\r\nconst Meal = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [openCart, setOpenCart] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClickOpenCart = () => {\r\n        setOpenCart(true);\r\n    };\r\n\r\n    const handleCloseCart = () => {\r\n        setOpenCart(false);\r\n    };\r\n    return (\r\n        <div className=\"bg-white mt-4\">\r\n            <div className=\"mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 col-md-8\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3\">\r\n                                \r\n                                <img\r\n                                     alt=\"photo\"\r\n                                    style={{width: '90px', height: '90px'}}\r\n                                    src={props.meal.image}\r\n                                />\r\n                            </div>\r\n                            <div style={{width: \"100%\"}} className=\"col-lg-9\">\r\n                                <div className=\"food-desc\">{props.meal.name}</div>\r\n                                <div className=\"food-desc mute mt-1\">{parse(props.meal.description)}</div>\r\n                                {/* <button \r\n                                    className=\"btn btn-style btn-sm\"\r\n                                    onClick={handleClickOpen}\r\n                                >\r\n                                    read more\r\n                                </button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 col-md-4\">\r\n                        <div>\r\n                            <p className=\"food-list-item-1\" style={{fontSize: '1.2em'}}><Naira>{props.meal.price}</Naira></p>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                            <button onClick={handleClickOpenCart} style={{backgroundColor: \"#FF8903\", color: \"white\" }} className=\"btn btn-sm\">Add To Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"py-2\" />\r\n            <ItemDetail handleClose={handleClose} open={open} meal={props.meal} />\r\n            <AddToCart handleClose={handleCloseCart} open={openCart} notifySuccess={props.notifySuccess} handleAddCart={props.handleAddCart} person={props.person} meal={props.meal} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meal","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\AddToCart.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\ItemDetail.jsx",["229"],"import React from 'react';\r\nimport Naira from 'react-naira';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nexport default function ItemDetail({meal, open, handleClose}) {\r\n    \r\n    return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{meal.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div>\r\n                            <img alt=\"photo\" style={{height: '200px', width: '100%'}} src={meal.image} />\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"mt-3\">\r\n                                <div className=\"d-flex flex-row-reverse\">\r\n                                    <p style={{color: 'black', fontSize: '0.8em', fontWeight: 'bold'}}><Naira>{meal.price}</Naira></p>\r\n                                </div>\r\n                                <h5 style={{color: 'black'}}>Description </h5>\r\n                                <p style={{color: 'black', fontSize: \"0.7em\"}}>\r\n                                    {parse(meal.description)}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} style={{color: \"#ff8903\"}}>\r\n                    CLOSE\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n      \r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\CartItem.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\Bg.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\CatItems.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\Footer.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\BookTable.jsx",["230","231","232"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst serviceType = [\r\n    {\r\n        name: \"Pickup\",\r\n        code: \"pickup\"\r\n    },\r\n    {\r\n        name: \"Door Delivery\",\r\n        code: \"door_delivery\"\r\n    },\r\n    {\r\n        name: \"Full Buffet\",\r\n        code: \"full_buffet\"\r\n    },\r\n    {\r\n        name: \"Served Buffet\",\r\n        code: \"served_buffet\"\r\n    },\r\n    {\r\n        name: \"Pre Packed Service\",\r\n        code: \"pre_packed_service\"\r\n    },\r\n]\r\n\r\nconst menuType = [\r\n    {\r\n        name: \"Waka G&B\",\r\n        code: \"waka_g&b\"\r\n    },\r\n    {\r\n        name: \"Waka Chinese\",\r\n        code: \"waka_chinese\"\r\n    },\r\n    {\r\n        name: \"Waka Naija\",\r\n        code: \"waka_naija\"\r\n    },\r\n    {\r\n        name: \"Beverages\",\r\n        code: \"beverages\"\r\n    },\r\n    {\r\n        name: \"Others\",\r\n        code: \"others\"\r\n    },\r\n]\r\n\r\nconst crowdType = [\r\n    {\r\n        name: \"Mixed\",\r\n        code: \"mixed\"\r\n    },\r\n    {\r\n        name: \"Adults\",\r\n        code: \"adults\"\r\n    },\r\n    {\r\n        name: \"Children\",\r\n        code: \"children\"\r\n    },\r\n    {\r\n        name: \"Advanced\",\r\n        code: \"advanced\"\r\n    },\r\n    {\r\n        name: \"High Class\",\r\n        code: \"high_class\"\r\n    },\r\n    {\r\n        name: \"Middle Class\",\r\n        code: \"middle_class\"\r\n    },\r\n    {\r\n        name: \"Low Class\",\r\n        code: \"low_class\"\r\n    },\r\n    {\r\n        name: \"Mixed Class\",\r\n        code: \"mixed_class\"\r\n    },\r\n]\r\n\r\n\r\nconst BookTable = (props) => {\r\n    const history = useHistory()\r\n    const [data, setData] = useState({\r\n        reserved_date: \"\",\r\n        reserved_time: \"\",\r\n        no_of_persons: 2,\r\n        name: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        event_address: \"\",\r\n        service_type: \"\",\r\n        crowd_type: \"\",\r\n        menu_type: \"\",\r\n        email: \"\"\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n    const [dispatcher, setDispatcher] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if(data.number_of_seat < 1){\r\n            props.notifyWarning(\"Number of seats must be greater than zero\")\r\n        }\r\n        else if(dispatcher.length === 0){\r\n            props.notifyWarning(\"a location must be selected\")\r\n        }\r\n        else {\r\n        let token = localStorage.getItem(\"token\")\r\n        setLoading(true)\r\n        axios.post(\"https://server.wakafoods.com/api/reservation/new\", {\r\n                ...data,\r\n                dispatcher\r\n            }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                    },\r\n            })\r\n            .then((res) => {\r\n                setLoading(false)\r\n                props.notifySuccess(\"Booked successfully\")\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response.data.errors;\r\n                console.log(error)\r\n                props.notifyWarning(error.reserved_date ? error.reserved_date[0] : error.reserved_time ? error.reserved_time[0] : error.email ? error.email[0] : error.name ? error.name[0] : error.no_of_persons ? error.no_of_persons : error.phone ? error.phone[0] : \"an error occured\")\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let location = localStorage.getItem(\"location\")\r\n        let parsedLocation = JSON.parse(location)\r\n        axios.get(`https://server.wakafoods.com/api/avail_pickup/${parsedLocation.slug}/list`, {\r\n            headers: {\r\n                Authorization: `Bearer ${props.token}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then((res) => {\r\n            setLocations(res.data.pickup_locations)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"book p-3\">\r\n            <form onSubmit={submit}>\r\n                <div className=\"d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"name\" name=\"name\" type=\"text\" required />\r\n                </div>\r\n                <div className=\"d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"email\" name=\"email\" type=\"email\" required />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"phone\" name=\"phone\" type=\"text\" required />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"address\" name=\"address\" type=\"text\" />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"event_address\">Event_address</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"event_address\" name=\"event_address\" type=\"text\" />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"reserved_date\">Date</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"reserved_date\" name=\"reserved_date\" type=\"date\" required />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"reserved_time\">Time</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"reserved_time\" name=\"reserved_time\" type=\"time\" required />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"number_of_persons\">Number of persons</label>\r\n                    <input className=\"form-control\" onChange={handleChange} id=\"number_of_persons\" value={data.no_of_persons} name=\"no_of_persons\" type=\"number\" required />\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"service_type\">Service Type</label>\r\n                    <select name=\"service_type\" className=\"form-control\" onChange={handleChange} required id=\"service_type\">\r\n                        <option value=\"\"></option>\r\n                        {serviceType.map((data, index) => (\r\n                            <option key={index} value={data.code}>{data.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"crowd_type\">Crowd Type</label>\r\n                    <select name=\"crowd_type\" className=\"form-control\" onChange={handleChange} required id=\"crowd_type\">\r\n                        <option value=\"\"></option>\r\n                        {crowdType.map((data, index) => (\r\n                            <option key={index} value={data.code}>{data.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"menu_type\">Menu Type</label>\r\n                    <select name=\"menu_type\" className=\"form-control\" onChange={handleChange} required id=\"menu_type\">\r\n                        <option value=\"\"></option>\r\n                        {menuType.map((data, index) => (\r\n                            <option key={index} value={data.code}>{data.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mt-2 d-flex flex-column justify-content-between\">\r\n                    <label htmlFor=\"reserved_location\">Select Location</label>\r\n                    <select className=\"form-control\" onChange={(e) => setDispatcher(e.target.value)} required id=\"reserved_location\">\r\n                        <option value=\"\"></option>\r\n                        {locations.map((data, index) => (\r\n                            <option key={index} value={data.id}>{data.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {loading ? (\r\n                    <div className=\"spinner-grow text-center mt-4 ml-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                ) : (\r\n                    <button className=\"btn mt-4 modal-btn\">Submit</button>\r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookTable;",{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":31,"column":21,"nodeType":"239","endLine":31,"endColumn":265},{"ruleId":"240","severity":1,"message":"241","line":56,"column":8,"nodeType":"242","endLine":56,"endColumn":14,"suggestions":"243"},{"ruleId":"240","severity":1,"message":"241","line":55,"column":8,"nodeType":"242","endLine":55,"endColumn":14,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":10,"column":12,"nodeType":"247","messageId":"248","endLine":10,"endColumn":19},{"ruleId":"245","severity":1,"message":"249","line":10,"column":21,"nodeType":"247","messageId":"248","endLine":10,"endColumn":31},{"ruleId":"240","severity":1,"message":"250","line":89,"column":8,"nodeType":"242","endLine":89,"endColumn":10,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":121,"column":103,"nodeType":"254","endLine":121,"endColumn":137},{"ruleId":"252","severity":1,"message":"253","line":121,"column":163,"nodeType":"254","endLine":121,"endColumn":173},{"ruleId":"245","severity":1,"message":"255","line":1,"column":18,"nodeType":"247","messageId":"248","endLine":1,"endColumn":32},{"ruleId":"245","severity":1,"message":"256","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"257","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":21},{"ruleId":"245","severity":1,"message":"258","line":10,"column":10,"nodeType":"247","messageId":"248","endLine":10,"endColumn":18},{"ruleId":"245","severity":1,"message":"259","line":10,"column":20,"nodeType":"247","messageId":"248","endLine":10,"endColumn":29},{"ruleId":"245","severity":1,"message":"260","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":22,"column":1,"nodeType":"263","messageId":"264","endLine":26,"endColumn":2},{"ruleId":"245","severity":1,"message":"265","line":29,"column":5,"nodeType":"247","messageId":"248","endLine":29,"endColumn":9},{"ruleId":"245","severity":1,"message":"266","line":33,"column":12,"nodeType":"247","messageId":"248","endLine":33,"endColumn":23},{"ruleId":"245","severity":1,"message":"267","line":34,"column":12,"nodeType":"247","messageId":"248","endLine":34,"endColumn":16},{"ruleId":"245","severity":1,"message":"268","line":36,"column":12,"nodeType":"247","messageId":"248","endLine":36,"endColumn":19},{"ruleId":"245","severity":1,"message":"269","line":37,"column":12,"nodeType":"247","messageId":"248","endLine":37,"endColumn":25},{"ruleId":"245","severity":1,"message":"270","line":41,"column":12,"nodeType":"247","messageId":"248","endLine":41,"endColumn":26},{"ruleId":"245","severity":1,"message":"271","line":45,"column":12,"nodeType":"247","messageId":"248","endLine":45,"endColumn":28},{"ruleId":"245","severity":1,"message":"272","line":49,"column":12,"nodeType":"247","messageId":"248","endLine":49,"endColumn":27},{"ruleId":"245","severity":1,"message":"273","line":53,"column":12,"nodeType":"247","messageId":"248","endLine":53,"endColumn":25},{"ruleId":"245","severity":1,"message":"274","line":57,"column":12,"nodeType":"247","messageId":"248","endLine":57,"endColumn":27},{"ruleId":"245","severity":1,"message":"275","line":61,"column":12,"nodeType":"247","messageId":"248","endLine":61,"endColumn":25},{"ruleId":"245","severity":1,"message":"276","line":65,"column":12,"nodeType":"247","messageId":"248","endLine":65,"endColumn":22},{"ruleId":"245","severity":1,"message":"277","line":65,"column":24,"nodeType":"247","messageId":"248","endLine":65,"endColumn":36},{"ruleId":"245","severity":1,"message":"278","line":66,"column":12,"nodeType":"247","messageId":"248","endLine":66,"endColumn":23},{"ruleId":"245","severity":1,"message":"279","line":66,"column":25,"nodeType":"247","messageId":"248","endLine":66,"endColumn":38},{"ruleId":"245","severity":1,"message":"280","line":91,"column":12,"nodeType":"247","messageId":"248","endLine":91,"endColumn":16},{"ruleId":"245","severity":1,"message":"281","line":98,"column":11,"nodeType":"247","messageId":"248","endLine":98,"endColumn":15},{"ruleId":"245","severity":1,"message":"282","line":215,"column":9,"nodeType":"247","messageId":"248","endLine":215,"endColumn":21},{"ruleId":"245","severity":1,"message":"283","line":218,"column":9,"nodeType":"247","messageId":"248","endLine":218,"endColumn":27},{"ruleId":"245","severity":1,"message":"284","line":224,"column":9,"nodeType":"247","messageId":"248","endLine":224,"endColumn":28},{"ruleId":"245","severity":1,"message":"285","line":230,"column":9,"nodeType":"247","messageId":"248","endLine":230,"endColumn":30},{"ruleId":"245","severity":1,"message":"286","line":236,"column":9,"nodeType":"247","messageId":"248","endLine":236,"endColumn":29},{"ruleId":"245","severity":1,"message":"287","line":242,"column":9,"nodeType":"247","messageId":"248","endLine":242,"endColumn":27},{"ruleId":"245","severity":1,"message":"288","line":248,"column":9,"nodeType":"247","messageId":"248","endLine":248,"endColumn":29},{"ruleId":"245","severity":1,"message":"289","line":254,"column":9,"nodeType":"247","messageId":"248","endLine":254,"endColumn":27},{"ruleId":"245","severity":1,"message":"290","line":261,"column":11,"nodeType":"247","messageId":"248","endLine":261,"endColumn":26},{"ruleId":"245","severity":1,"message":"291","line":265,"column":11,"nodeType":"247","messageId":"248","endLine":265,"endColumn":22},{"ruleId":"240","severity":1,"message":"292","line":321,"column":8,"nodeType":"242","endLine":321,"endColumn":10,"suggestions":"293"},{"ruleId":"245","severity":1,"message":"294","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"295","line":28,"column":8,"nodeType":"242","endLine":28,"endColumn":15,"suggestions":"296"},{"ruleId":"252","severity":1,"message":"253","line":77,"column":139,"nodeType":"254","endLine":77,"endColumn":149},{"ruleId":"245","severity":1,"message":"297","line":21,"column":11,"nodeType":"247","messageId":"248","endLine":21,"endColumn":19},{"ruleId":"245","severity":1,"message":"298","line":32,"column":29,"nodeType":"247","messageId":"248","endLine":32,"endColumn":47},{"ruleId":"245","severity":1,"message":"299","line":34,"column":22,"nodeType":"247","messageId":"248","endLine":34,"endColumn":33},{"ruleId":"245","severity":1,"message":"300","line":62,"column":13,"nodeType":"247","messageId":"248","endLine":62,"endColumn":29},{"ruleId":"245","severity":1,"message":"301","line":111,"column":13,"nodeType":"247","messageId":"248","endLine":111,"endColumn":27},{"ruleId":"240","severity":1,"message":"302","line":141,"column":8,"nodeType":"242","endLine":141,"endColumn":10,"suggestions":"303"},{"ruleId":"240","severity":1,"message":"304","line":156,"column":8,"nodeType":"242","endLine":156,"endColumn":17,"suggestions":"305"},{"ruleId":"252","severity":1,"message":"253","line":182,"column":283,"nodeType":"254","endLine":182,"endColumn":300},{"ruleId":"237","severity":1,"message":"238","line":62,"column":21,"nodeType":"239","endLine":62,"endColumn":132},{"ruleId":"245","severity":1,"message":"298","line":26,"column":29,"nodeType":"247","messageId":"248","endLine":26,"endColumn":47},{"ruleId":"240","severity":1,"message":"306","line":49,"column":8,"nodeType":"242","endLine":49,"endColumn":10,"suggestions":"307"},{"ruleId":"245","severity":1,"message":"308","line":136,"column":11,"nodeType":"247","messageId":"248","endLine":136,"endColumn":16},{"ruleId":"309","severity":1,"message":"310","line":59,"column":25,"nodeType":"239","endLine":59,"endColumn":60},{"ruleId":"309","severity":1,"message":"310","line":88,"column":29,"nodeType":"239","endLine":88,"endColumn":64},{"ruleId":"245","severity":1,"message":"311","line":1,"column":8,"nodeType":"247","messageId":"248","endLine":1,"endColumn":13},{"ruleId":"312","severity":1,"message":"313","line":9,"column":75,"nodeType":"314","messageId":"264","endLine":9,"endColumn":77},{"ruleId":"245","severity":1,"message":"290","line":11,"column":11,"nodeType":"247","messageId":"248","endLine":11,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":34,"column":33,"nodeType":"239","endLine":38,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":25,"column":29,"nodeType":"239","endLine":25,"endColumn":106},{"ruleId":"245","severity":1,"message":"315","line":88,"column":11,"nodeType":"247","messageId":"248","endLine":88,"endColumn":18},{"ruleId":"245","severity":1,"message":"316","line":120,"column":13,"nodeType":"247","messageId":"248","endLine":120,"endColumn":18},{"ruleId":"240","severity":1,"message":"317","line":157,"column":8,"nodeType":"242","endLine":157,"endColumn":10,"suggestions":"318"},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orders.data' and 'orders.next_url'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOrders' needs the current value of 'orders.data'.","ArrayExpression",["321"],["322"],"no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","'setSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["323"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MdLocationCity' is defined but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'Checkbox' is defined but never used.","'TextField' is defined but never used.","'Moment' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'date' is assigned a value but never used.","'order_codes' is assigned a value but never used.","'open' is assigned a value but never used.","'checked' is assigned a value but never used.","'checkedMonday' is assigned a value but never used.","'checkedTuesday' is assigned a value but never used.","'checkedWednesday' is assigned a value but never used.","'checkedThursday' is assigned a value but never used.","'checkedFriday' is assigned a value but never used.","'checkedSaturday' is assigned a value but never used.","'checkedSunday' is assigned a value but never used.","'first_time' is assigned a value but never used.","'setFirstTime' is assigned a value but never used.","'second_time' is assigned a value but never used.","'setSecondTime' is assigned a value but never used.","'cart' is assigned a value but never used.","'days' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleChangeMonday' is assigned a value but never used.","'handleChangeTuesday' is assigned a value but never used.","'handleChangeWednesday' is assigned a value but never used.","'handleChangeThursday' is assigned a value but never used.","'handleChangeFriday' is assigned a value but never used.","'handleChangeSaturday' is assigned a value but never used.","'handleChangeSunday' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config', 'history', and 'props.location.query'. Either include them or remove the dependency array. You can also do a functional update 'setConfig(c => ...)' if you only need 'config' in the 'setConfig' call.",["324"],"'TextareaAutosize' is defined but never used.","React Hook useEffect has a missing dependency: 'carts'. Either include it or remove the dependency array.",["325"],"'dispatch' is assigned a value but never used.","'setNumberOfPersons' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'parsedStoredCart' is assigned a value but never used.","'parsedLocation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'done.done' and 'props.location.query'. Either include them or remove the dependency array.",["326"],"React Hook useEffect has a missing dependency: 'numberOfPersons'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPerson' needs the current value of 'numberOfPersons'.",["327"],"React Hook useEffect has missing dependencies: 'pickupLocation' and 'props.pickupLocation.slug'. Either include them or remove the dependency array. You can also do a functional update 'setPickupLocation(p => ...)' if you only need 'pickupLocation' in the 'setPickupLocation' call.",["328"],"'done1' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'history' is assigned a value but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["329"],"no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"330","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [call, orders.data, orders.next_url]",{"range":"347","text":"348"},{"range":"349","text":"348"},"Update the dependencies array to be: [formData]",{"range":"350","text":"351"},"Update the dependencies array to be: [config, history, props.location.query]",{"range":"352","text":"353"},"Update the dependencies array to be: [carts, press]",{"range":"354","text":"355"},"Update the dependencies array to be: [done.done, props.location.query]",{"range":"356","text":"357"},"Update the dependencies array to be: [numberOfPersons, success]",{"range":"358","text":"359"},"Update the dependencies array to be: [pickupLocation, props.pickupLocation.slug]",{"range":"360","text":"361"},"Update the dependencies array to be: [props.token]",{"range":"362","text":"363"},[1867,1873],"[call, orders.data, orders.next_url]",[1869,1875],[3032,3034],"[formData]",[10964,10966],"[config, history, props.location.query]",[969,976],"[carts, press]",[5228,5230],"[done.done, props.location.query]",[5724,5733],"[numberOfPersons, success]",[1686,1688],"[pickupLocation, props.pickupLocation.slug]",[4008,4010],"[props.token]"]