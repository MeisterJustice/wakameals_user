[{"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\index.js":"1","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\App.js":"2","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\WithAuth.js":"4","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\store.js":"5","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Dashboard.jsx":"6","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\OpenOder.jsx":"7","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\ClosedOder.jsx":"8","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Password.jsx":"9","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\EditProfile.jsx":"10","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Checkout.jsx":"11","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\Cart.jsx":"12","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signin.jsx":"13","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signup.jsx":"14","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LandingPage.jsx":"15","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\reducers.js":"16","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\actions.js":"17","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\ReuseableCompononts\\Preloader.js":"18","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\CartItem.jsx":"19","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\WelcomeModal.jsx":"20","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\SuccessModal.jsx":"21","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\FailModal.jsx":"22","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\HeaderNav.jsx":"23","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\index.jsx":"24","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\types.js":"25","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LocationDropdown.jsx":"26","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Categories.jsx":"27","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\SubCategory.jsx":"28","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Meal.jsx":"29","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\AddToCart.jsx":"30","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\ItemDetail.jsx":"31","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\CartItem.jsx":"32","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\Bg.jsx":"33","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\CatItems.jsx":"34","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\Footer.jsx":"35"},{"size":517,"mtime":1610496847817,"results":"36","hashOfConfig":"37"},{"size":2375,"mtime":1610496847768,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1610496847819,"results":"39","hashOfConfig":"37"},{"size":918,"mtime":1610496847805,"results":"40","hashOfConfig":"37"},{"size":678,"mtime":1610496847804,"results":"41","hashOfConfig":"37"},{"size":4227,"mtime":1610496847798,"results":"42","hashOfConfig":"37"},{"size":5251,"mtime":1610995400250,"results":"43","hashOfConfig":"37"},{"size":5469,"mtime":1610995400251,"results":"44","hashOfConfig":"37"},{"size":6187,"mtime":1610996245605,"results":"45","hashOfConfig":"37"},{"size":6510,"mtime":1610996245602,"results":"46","hashOfConfig":"37"},{"size":22445,"mtime":1610995400250,"results":"47","hashOfConfig":"37"},{"size":4884,"mtime":1610995400249,"results":"48","hashOfConfig":"37"},{"size":5349,"mtime":1610996245606,"results":"49","hashOfConfig":"37"},{"size":8177,"mtime":1610996245601,"results":"50","hashOfConfig":"37"},{"size":10465,"mtime":1610996743198,"results":"51","hashOfConfig":"37"},{"size":808,"mtime":1610496847804,"results":"52","hashOfConfig":"37"},{"size":1458,"mtime":1610496847803,"results":"53","hashOfConfig":"37"},{"size":529,"mtime":1610496847795,"results":"54","hashOfConfig":"37"},{"size":5393,"mtime":1610995400250,"results":"55","hashOfConfig":"37"},{"size":2874,"mtime":1610995400252,"results":"56","hashOfConfig":"37"},{"size":5108,"mtime":1610995400251,"results":"57","hashOfConfig":"37"},{"size":1095,"mtime":1610995400250,"results":"58","hashOfConfig":"37"},{"size":4024,"mtime":1610995400250,"results":"59","hashOfConfig":"37"},{"size":413,"mtime":1610989355036,"results":"60","hashOfConfig":"37"},{"size":301,"mtime":1610496847805,"results":"61","hashOfConfig":"37"},{"size":4871,"mtime":1610996245601,"results":"62","hashOfConfig":"37"},{"size":603,"mtime":1610995116811,"results":"63","hashOfConfig":"37"},{"size":368,"mtime":1610989663955,"results":"64","hashOfConfig":"37"},{"size":2783,"mtime":1610993017210,"results":"65","hashOfConfig":"37"},{"size":3375,"mtime":1610996245605,"results":"66","hashOfConfig":"37"},{"size":2092,"mtime":1610995400251,"results":"67","hashOfConfig":"37"},{"size":3834,"mtime":1610496847777,"results":"68","hashOfConfig":"37"},{"size":3402,"mtime":1610995813517,"results":"69","hashOfConfig":"37"},{"size":402,"mtime":1610995236052,"results":"70","hashOfConfig":"37"},{"size":437,"mtime":1610996979037,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1jnohnu",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\index.js",[],["154","155"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\App.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\WithAuth.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\store.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Dashboard.jsx",["156"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from \"../ReuseableCompononts/Preloader\"\r\n\r\nexport default function Dashboard() {\r\n    const [user, setUser] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setUser(res.data.details)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <HeaderNav/>\r\n            {loading ? <Preloader /> : (\r\n            <div className=\"user-dashboard mt-5\">\r\n                <div className=\"text-center\">\r\n                    <img  alt=\"photo\" src={user.avatar === null ? \"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\" : user.avatar} className=\"rounded-circle\" style={{height: '200px', width: '200px', objectFit: \"cover\"}} />\r\n                    <h5 style={{color: 'white', fontWeight: 'bold', marginTop: '10px'}}>{user.first_name} {user.last_name}</h5>\r\n                </div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/open\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Open Oders\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/close\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Closed Orders\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/password\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Change Password\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                \r\n                    <div className=\"col-lg-6 col-md-6 col-6 mb-3 \">\r\n                        <Link to=\"/account/edit\">\r\n                            <div className=\"card shadow border-0 card-hover\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <p className=\"card-text\" style={{fontWeight: 'bold', fontSize: '0.7em'}}>\r\n                                    Edit Profile\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    </div>               \r\n                </div>\r\n            </div>\r\n            ) }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\OpenOder.jsx",["157"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\ClosedOder.jsx",["158"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport Moment from 'react-moment';\r\nimport Naira from 'react-naira';\r\n\r\nexport default function ClosedOder() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [loading1, setLoading1] = useState(false)\r\n    const [orders, setOrders] = useState({\r\n        next_url: null,\r\n        data: []\r\n    })\r\n    const [call, setCall] = useState(1)\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/order/list/closed\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              },\r\n        })\r\n        .then((res) => {\r\n            setOrders({\r\n                next_url: res.data.orders.next_page_url,\r\n                data: res.data.orders.data\r\n            })\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        if(call > 1){\r\n            Axios.get(orders.next_url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then((res) => {\r\n                setOrders({\r\n                    next_url: res.data.orders.next_page_url,\r\n                    data: [...orders.data, ...res.data.orders.data]\r\n                })\r\n                setLoading1(false)\r\n            })\r\n        }\r\n    }, [call])\r\n\r\n    const seeMore = () => {\r\n        setLoading1(true)\r\n        setCall(call + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"mt-5 container\">\r\n                    {orders.data.length > 0 ? (\r\n                        <div className=\"table-responsive mt-5 bg-white p-2\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Order Number</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Delivery Type</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Amount</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Date</th>\r\n                                    <th style={{fontSize: \"13px\"}} scope=\"col\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.data.map((data, i) => (\r\n                                    <tr key={i}>\r\n                                                                                <td style={{fontSize: \"13px\"}}>{data.code}</td>\r\n                                        <td style={{fontSize: \"13px\"}}>{data.delivery_type}</td>\r\n                                        <td style={{fontSize: \"13px\"}}><Naira>{data.total}</Naira></td>\r\n                                        <td style={{fontSize: \"13px\"}}>\r\n                                            <Moment format=\"YYYY/MM/DD\">\r\n                                                    {data.created_at}\r\n                                                </Moment>\r\n                                        </td>\r\n                                        <td style={{fontSize: \"13px\"}}><span className={`badge ${data.status === \"completed\" ? \"badge-success\" : data.status === \"cancelled\" ? \"badge-secondary\" : data.status === \"cancelled_failed_payment\" ? \"badge-warning\" : data.status === \"cancelled_system\" ? \"badge-primary\" : data.status === \"cancelled_user\" ? \"badge-dark\" : \"badge-warning\" }`}>{data.status}</span></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        {typeof orders.next_url === \"string\" && (\r\n                            <div className=\"my-5\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                {loading1 ? (\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                ) : (\r\n            \r\n                                    <button onClick={seeMore} className=\"cursor btn btn-style\" style={{fontWeight: \"bold\"}}>\r\n                                        SEE MORE\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    ) : (\r\n                        <div style={{fontWeight: \"bold\", color: \"#ff7417\"}} className=\"text-center\">\r\n                            NO ORDER\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n    </div>\r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Password.jsx",["159","160"],"import {useState} from 'react';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Password(props) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        current_password: '',\r\n        new_password: '',\r\n        retype_new_password: \"\"\r\n    });\r\n\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if(formData.new_password === formData.retype_new_password){\r\n            let token = localStorage.getItem(\"token\")\r\n            let parsedToken = JSON.parse(token)\r\n            Axios.post(\"https://server.wakameals.validprofits.xyz/api/profile/password/update\", formData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${parsedToken}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  },\r\n            })\r\n            .then(() => {\r\n                setLoading(false)\r\n                notifySuccess(\"Password updated successfully\")\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                notifyWarning(error.response.data.errors.current_password[0])\r\n            })\r\n        } else {\r\n            setLoading(false)\r\n            notifyWarning(\"Passwords do not match\")\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"login container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\", height: \"90vh\"}}>\r\n            <div className=\"card border-0 shadow \" style={{backgroundColor: '#ff7417', width: \"60%\"}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                        \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"current_password\">\r\n                                    Current Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"current_password\"\r\n                                    value={formData.current_password}\r\n                                    name=\"current_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"new_password\">\r\n                                    New Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"new_password\"\r\n                                    value={formData.new_password}\r\n                                    name=\"new_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"retype_new_password\">\r\n                                    Confirm New Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"retype_new_password\"\r\n                                    value={formData.retype_new_password}\r\n                                    name=\"retype_new_password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            {loading ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    CHANGE PASSWORD\r\n                                </button>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\EditProfile.jsx",["161","162","163"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\Checkout.jsx",["164","165","166","167","168","169"],"import { MdHome, MdLocationCity, MdPerson, MdPhoneAndroid } from \"react-icons/md\"\r\nimport HeaderNav from \"../Navigation/HeaderNav\"\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Checkbox, TextField } from \"@material-ui/core\";\r\nimport Moment from 'react-moment';\r\nimport { usePaystackPayment } from 'react-paystack';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Axios from \"axios\";\r\nimport Preloader from \"../ReuseableCompononts/Preloader\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nDate.prototype.addDays = function(days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}\r\n\r\n\r\nvar date = new Date();\r\n\r\nconst Checkout = (props) => {\r\n    const history = useHistory();\r\n    const [order_codes, setOrderCodes] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const [checkedMonday, setCheckedMonday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedTuesday, setCheckedTuesday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedWednesday, setCheckedWednesday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedThursday, setCheckedThursday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedFriday, setCheckedFriday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedSaturday, setCheckedSaturday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [checkedSunday, setCheckedSunday] = useState({\r\n        status: false,\r\n        date: null\r\n    });\r\n    const [first_time, setFirstTime] = useState(null)\r\n    const [second_time, setSecondTime] = useState(null)\r\n    const [config, setConfig] = useState({\r\n        reference: uuidv4(),\r\n        email: \"\",\r\n        amount: \"\",\r\n        metadata: {\r\n            customer: \"\",\r\n            email: \"\",\r\n            order_codes: []\r\n        },\r\n        publicKey: 'pk_test_56a49c6ffaa3261f532935c213cb8bb2c714cb9b',\r\n    })\r\n    const [user, setUser] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n    })\r\n    const [address, setAddress] = useState(\"\")\r\n    const [pickupLocation, setPickupLocation] = useState({\r\n        data: [],\r\n        location: \"\",\r\n        code: \"\"\r\n    })\r\n    const [cart, setCart] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [selected, setSelected] = useState(\"door_delivery\")\r\n    const [loadOrder, setLoadOrder] = useState(false)\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const days = [1, 2, 3, 4, 5, 6, 7]\r\n\r\n    const onSubmit = () => {\r\n        setLoadOrder(true)\r\n        if(\"07:00\" > first_time){\r\n            notifyWarning(\"time must be after 6:59 AM\")\r\n        }\r\n        if(second_time > \"17:15\"){\r\n            notifyWarning(\"time must be before 5:15 PM\")\r\n        }\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        let location = localStorage.getItem(\"location\")\r\n        let parsedLocation = JSON.parse(location)\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        var dates = []\r\n        var times = []\r\n        if(checkedMonday.status){\r\n            dates.push(checkedMonday.date.toLocaleDateString('en-CA'))\r\n        } if(checkedTuesday.status){\r\n            dates.push(checkedTuesday.date.toLocaleDateString('en-CA'))\r\n        } if(checkedWednesday.status){\r\n            dates.push(checkedWednesday.date.toLocaleDateString('en-CA'))\r\n        }if(checkedThursday.status){\r\n            dates.push(checkedThursday.date.toLocaleDateString('en-CA'))\r\n        }if(checkedFriday.status){\r\n            dates.push(checkedFriday.date.toLocaleDateString('en-CA'))\r\n        }if(checkedSaturday.status){\r\n            dates.push(checkedSaturday.date.toLocaleDateString('en-CA'))\r\n        }if(checkedSunday.status){\r\n            dates.push(checkedSunday.date.toLocaleDateString('en-CA'))\r\n        } if(first_time !== null){\r\n            times.push(first_time)\r\n        }if(second_time !== null){\r\n            times.push(second_time)\r\n        }\r\n        if(checked && dates.length === 0){\r\n            notifyWarning(\"You must select at least one date\")\r\n        }\r\n        if(checked && times.length === 0){\r\n            notifyWarning(\"You must select at least one time\")\r\n        }\r\n        if(selected === \"door_delivery\" && address.length === 0) {\r\n            notifyWarning(\"address must not be empty\")\r\n            setLoadOrder(false)\r\n        }\r\n        Axios.post(\"https://server.wakameals.validprofits.xyz/api/order/new\", {\r\n            delivery_type: selected,\r\n            pickup_code: pickupLocation.code,\r\n            ...parsedLocation,\r\n            address,\r\n            recurring: checked,\r\n            recurring_dates: dates,\r\n            recurring_times: times,\r\n            meals: parsedCart\r\n        }, {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setOrderCodes(res.data.order_codes)\r\n            setConfig({\r\n                ...config,\r\n                amount: res.data.order_total * 100,\r\n                metadata: {\r\n                    ...config.metadata,\r\n                    order_codes: res.data.order_codes\r\n                }\r\n            })\r\n            setTimeout(() => {\r\n                setLoadOrder(false)\r\n                setOpen1(true)\r\n            }, 2000);\r\n        })\r\n        .catch(() => {\r\n            setLoadOrder(false)\r\n            notifyWarning(\"An error occured.... Try again\")\r\n        })\r\n    }\r\n\r\n    const onSuccess = (reference) => {\r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        localStorage.removeItem(\"cart\")\r\n        setOpen1(false)\r\n        setLoading(true)\r\n        Axios.get(`https://server.wakameals.validprofits.xyz/api/order/verify_payment?trxref=${config.reference}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then(() => {\r\n            setLoading(false)\r\n            notifySuccess(\"Order completed and payment successful\")\r\n            setOpen1(false)\r\n            history.push(\"/account/open\")\r\n        })\r\n      };\r\n    \r\n      // you can call this function anything\r\n      const onClose = () => {\r\n        Axios.get(`https://server.wakameals.validprofits.xyz/api/order/verify_payment?trxref=${config.reference}`)\r\n        .then(() => {\r\n            notifyWarning(\"Could not complete payment\")\r\n            setOpen1(false)\r\n            history.push(\"/account/open\")\r\n            setConfig({\r\n                ...config,\r\n                reference: uuidv4()\r\n            })\r\n        })\r\n      }\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleChangeMonday = (event, date) => {\r\n    setCheckedMonday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeTuesday = (event, date) => {\r\n    setCheckedTuesday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeWednesday = (event, date) => {\r\n    setCheckedWednesday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeThursday = (event, date) => {\r\n    setCheckedThursday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeFriday = (event, date) => {\r\n    setCheckedFriday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeSaturday = (event, date) => {\r\n    setCheckedSaturday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n  const handleChangeSunday = (event, date) => {\r\n    setCheckedSunday({\r\n        status: event.target.checked,\r\n        date\r\n    });\r\n  };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(typeof props.location.query !== \"undefined\"){\r\n    \r\n        let token = localStorage.getItem(\"token\")\r\n        let parsedToken = JSON.parse(token)\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        setCart(parsedCart)\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/profile/details\", {\r\n            headers: {\r\n                Authorization: `Bearer ${parsedToken}`,\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n              }\r\n        })\r\n        .then((res) => {\r\n            setLoading(false)\r\n            setConfig({\r\n                ...config,\r\n                email: res.data.details.email,\r\n                metadata: {\r\n                    ...config.metadata,\r\n                    email: res.data.details.email,\r\n                    customer: `${res.data.details.first_name} ${res.data.details.last_name}`\r\n                }\r\n            })\r\n            setUser({\r\n                first_name: res.data.details.first_name,\r\n                last_name: res.data.details.last_name,\r\n                title: res.data.details.title,\r\n                phone: res.data.details.phone,\r\n            })\r\n        })\r\n        Axios.get(\"https://server.wakameals.validprofits.xyz/api/avail_pickup/list\")\r\n        .then((res) => {\r\n            setPickupLocation({\r\n                ...pickupLocation,\r\n                data: res.data.pickup_locations\r\n            })\r\n        })\r\n        } else {\r\n            history.push(\"/cart\");\r\n        }\r\n    }, [])\r\n\r\n    const handlePickup = (code, data) => {\r\n        setPickupLocation({\r\n            ...pickupLocation,\r\n            location: `${data.address}, ${data.town.name}, ${data.lga.name}, ${data.state.name}`,\r\n            code: code\r\n        })\r\n        setSelected(\"pickup\")\r\n        setOpen(false)\r\n    }\r\n\r\n    const initializePayment = usePaystackPayment(config);\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav cart={true} />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {loading ? <Preloader /> : (\r\n\r\n            \r\n            <div className=\"my-5 container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-8 bg-white shadow p-2\">\r\n                        <div className=\"container\">\r\n                            <h5>Select Delivery / Pickup Option</h5>\r\n                            <hr className=\"mt-3\" />\r\n\r\n                            <div className=\"mt-2 row\" >\r\n                                <div className=\"col-lg-1\"/>\r\n                                <div onClick={() => setSelected(\"door_delivery\")} style={{border: \"1px solid gray\", backgroundColor: selected === \"door_delivery\" ? \"#ffeee3\" : \"white\"}} className=\"col-lg-5 cursor mr-lg-1\">\r\n                                    <div className=\"p-1\">\r\n                                        <h6 style={{color: \"#ff7417\"}}>Deliver to me</h6>\r\n                                        <hr className=\"mt-2\" />\r\n                                        <div className=\"mt-2\">\r\n                                            <div style={{fontSize: \"13px\"}}>\r\n                                                <MdPerson style={{color: \"#ff7417\", fontSize: \"15px\"}}/>{`   ${user.title} ${user.first_name} ${user.last_name}`}\r\n                                            </div>\r\n                                            <div className=\"mt-2\" style={{fontSize: \"13px\"}}>\r\n                                                <MdPhoneAndroid style={{color: \"#ff7417\", fontSize: \"15px\"}}/>{`   ${user.phone}`}\r\n                                            </div>\r\n                                            <div className=\"my-3\">\r\n                                                <input\r\n                                                    name=\"address\"\r\n                                                    onChange={e => setAddress(e.target.value)}\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"your delivery address\"\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div onClick={handleClickOpen} style={{border: \"1px solid gray\", backgroundColor: selected === \"pickup\" ? \"#ffeee3\" : \"white\"}} className=\"col-lg-5 cursor ml-lg-1 mt-3 mt-lg-0\">\r\n                                    <div className=\"p-1\">\r\n                                        <h6 style={{color: \"#ff7417\"}}>Select Pickup Location</h6>\r\n                                        <hr className=\"mt-2\" />\r\n                                        <div className=\"mt-2\">\r\n                                            <div style={{fontSize: \"13px\"}}>\r\n                                                <MdHome style={{color: \"#ff7417\", fontSize: \"15px\"}}/>{`   ${pickupLocation.location}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-1\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-1\">\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-3 mt-3 mt-lg-0 bg-white shadow p-2\">\r\n                        <div>\r\n                            <h5>Order Options</h5>\r\n                            <hr className=\"mt-3\" />\r\n                            <div className=\"mt-2 p-1\" style={{display: \"flex\", alignItems: \"center\", border: \"1px solid gray\"}}>\r\n                                <Checkbox\r\n                                    checked={checked}\r\n                                    onChange={handleChange}\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                />\r\n                                <div className=\"ml-2\">Add to reoccuring order?</div>\r\n                            </div>\r\n                            {checked && (\r\n                                <div className=\"mt-3\">\r\n                                    <h6 style={{color: \"#ff7417\"}}>Choose delivery days</h6>\r\n                                    <hr className=\"mt-2\" />\r\n                                    {days.map((data, index) => (\r\n                                        <div className=\"mt-1 p-1\" style={{display: \"flex\", alignItems: \"center\", border: \"1px solid gray\"}}>\r\n                                            <Checkbox\r\n                                                checked={\r\n                                                    data === 1 ? checkedMonday.status : data === 2 ? checkedTuesday.status : data === 3 ? checkedWednesday.status : data === 4 ? checkedThursday.status : data === 5 ? checkedFriday.status : data === 6 ? checkedSaturday.status : checkedSunday.status\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    data === 1 ? handleChangeMonday(e, date.addDays(1)) : data === 2 ? handleChangeTuesday(e, date.addDays(2)) : data === 3 ? handleChangeWednesday(e, date.addDays(3)) : data === 4 ? handleChangeThursday(e, date.addDays(4)) : data === 5 ? handleChangeFriday(e, date.addDays(5)) : data === 6 ? handleChangeSaturday(e, date.addDays(6)) : handleChangeSunday(e, date.addDays(7))\r\n                                                }\r\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                            />\r\n                                            <div style={{fontSize: \"13px\"}} className=\"ml-2\">\r\n                                                <Moment format=\"YYYY/MM/DD\">\r\n                                                    {date.addDays(data)}\r\n                                                </Moment>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                    <div className=\"mt-2\">\r\n                                        <h6 style={{color: \"#ff7417\"}}>Choose delivery times (7:05 AM to 5:15 PM</h6>\r\n                                        <div style={{fontSize: \"13px\"}}>First Time (Leave empty if not applicable)</div>\r\n                                        <input\r\n                                            name=\"first_time\"\r\n                                            onChange={e => setFirstTime(e.target.value)}\r\n                                            type=\"time\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        <div style={{fontSize: \"13px\"}}>Second Time (Leave empty if not applicable)</div>\r\n                                        <input\r\n                                            name=\"second_time\"\r\n                                            onChange={e => setSecondTime(e.target.value)}\r\n                                            type=\"time\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {loadOrder ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                                    <div className=\"spinner-grow\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"mt-3\">\r\n                                <button onClick={onSubmit} className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#ff7417\", border: \"none\", color: \"white\"}}>CONTINUE TO ORDER</button>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n            {/* FOR PICKUP LOCATION SELECTION */}\r\n            <Dialog\r\n                fullWidth\r\n                open={open}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-cart\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <h6 style={{color: '#ff7417'}} className=\"modal-title\" id=\"exampleModalCenterTitle\">\r\n                        Select Location\r\n                    </h6>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-cart\">                                \r\n                        <div>\r\n                            {pickupLocation.data.map((data, index) => (\r\n                                <div onClick={() => handlePickup(data.code, data)} style={{border: \"1px gray solid\", fontSize: \"14px\"}} className=\"p-2 hover-location cursor mt-2\" >\r\n                                    {data.address}, {data.town.name}, {data.lga.name}, {data.state.name}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} style={{color: \"#ff7417\", fontWeight: \"550\"}}>\r\n                    CLOSE\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            {/* PAYMENT */}\r\n            <Dialog\r\n                fullWidth\r\n                open={open1}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-cart\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-cart\">                                \r\n                        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}} className=\"mt-3\">\r\n                            <button className=\"btn btn-lg btn-block\" style={{backgroundColor: \"#ff7417\", border: \"none\", color: \"white\", fontWeight: \"bold\"}} onClick={() => {\r\n                                initializePayment(onSuccess, onClose)\r\n                            }}>CONTINUE TO PAYMENT</button>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\Cart.jsx",["170","171"],"import { TextareaAutosize } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Naira from \"react-naira\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderNav from \"../../Navigation/HeaderNav\";\r\nimport Preloader from \"../../ReuseableCompononts/Preloader\";\r\nimport CartItem from \"./CartItem\";\r\n\r\n\r\nconst Cart = (props) => {\r\n    const [cart, setCart] = useState([])\r\n    const [carts, setCarts] = useState([])\r\n    const [item, setItem] = useState({})\r\n    const [token, setToken] = useState(undefined)\r\n    const [loading, setLoading] = useState(true)\r\n    const [press, setPress] = useState(0)\r\n    const [location, setLocation] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(press > 0){\r\n            if(carts.length > 0){\r\n                localStorage.setItem(\"cart\", JSON.stringify(carts))\r\n            } else {\r\n                localStorage.removeItem(\"cart\")\r\n            }\r\n        }\r\n    }, [press])\r\n\r\n    useEffect(() => {\r\n        let cartItem = localStorage.getItem(\"cart\")\r\n        let tokenn = localStorage.getItem(\"token\")\r\n        let locationItem = localStorage.getItem(\"location\")\r\n        let parsedLocation = JSON.parse(locationItem)\r\n        let parsedCartItem = JSON.parse(cartItem)\r\n        let parsedToken = JSON.parse(tokenn)\r\n        setToken(parsedToken)\r\n        setCarts(parsedCartItem)\r\n        if(parsedLocation){\r\n            setLocation(true)\r\n        }\r\n        if(parsedCartItem !== undefined){\r\n            if(typeof parsedToken === \"string\"){\r\n                Axios.post(\"https://server.wakameals.validprofits.xyz/api/cart/sync\", {items: parsedCartItem}, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${parsedToken}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                        Accept: \"application/json\",\r\n                      }\r\n                }).then((res) => {\r\n                    setCart(res.data.cart.items)\r\n                    setItem(res.data.cart)\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    \r\n                })\r\n            } else {\r\n                Axios.post(\"https://server.wakameals.validprofits.xyz/api/cart/sync\", {items: parsedCartItem})\r\n                .then((res) => {\r\n                    setCart(res.data.cart.items)\r\n                    setItem(res.data.cart)\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    \r\n                })\r\n            }\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <HeaderNav cart={true}/>\r\n            {loading ? <Preloader /> : (\r\n                <div className=\"my-5 container bg-white p-2\">\r\n                    <h1 style={{fontSize: \"26px\"}} >CART ({loading ? 0 : cart.length})</h1>\r\n                    <div className=\"mt-5\">\r\n                    {cart.map((data, index) => (\r\n                        <CartItem setPress={setPress} press={press} carts={carts} setCarts={setCarts} setCart={setCart} token={token} total={item.total} key={index} cart={data} />\r\n                    ))}\r\n                    </div>\r\n                    {cart.length > 0 && (\r\n                        <div className=\"mt-5\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                            <div style={{fontWeight: \"bold\"}}>TOTAL:</div>\r\n                            <div style={{color: \"#ff7417\", fontSize: \"24px\", fontWeight: \"bold\"}} className=\"ml-5 mr-md-4\"><Naira>{item.total}</Naira></div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"mt-5 shadow\">\r\n                        <div className=\"p-4\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                            <Link to=\"/\">\r\n                                <button style={{color: \"#ff7417\", backgroundColor: \"white\", border: \"none\"}} className=\"btn shadow px-3 py-2\">\r\n                                    CONTINUE SHOPPING\r\n                                </button>\r\n                            </Link>\r\n                            {cart.length > 0 && (\r\n                                <Link to={{pathname: `${location ? \"/checkout\" : \"/\"}`, query: {price: item.total, location: true}}}>\r\n                                    <button style={{color: \"white\", backgroundColor: \"#ff7417\", border: \"none\"}} className=\"btn ml-4 shadow px-3 py-2\">\r\n                                        GO TO CHECKOUT\r\n                                    </button>\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signin.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Auth\\Signup.jsx",["172"],"import {useState} from 'react';\r\nimport {signup} from '../../Redux/actions';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport HeaderNav from '../Navigation/HeaderNav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignUp(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, error} = userSignin;\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        title: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const {email, password, first_name, last_name, title, phone} = formData;\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        dispatch(signup(formData)).then(() => {}).then(() => {\r\n                let token = localStorage.getItem(\"token\")\r\n                if(typeof token === \"string\"){\r\n                    props.history.push('/account');\r\n                }\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderNav />\r\n            <div className=\"login container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\", paddingTop: \"50px\", paddingBottom: \"50px\"}}>\r\n            <div className=\"card border-0 shadow \" style={{backgroundColor: '#B02121', width: \"60%\"}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"first_name\">\r\n                                    First Name\r\n                                </label>\r\n                                <input\r\n                                    id=\"first_name\"\r\n                                    value={first_name}\r\n                                    name=\"first_name\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.first_name}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"last_name\">\r\n                                    Last Name\r\n                                </label>\r\n                                <input\r\n                                    id=\"last_name\"\r\n                                    value={last_name}\r\n                                    name=\"last_name\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.last_name}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"title\">Title</label>\r\n                                <select value={title} id=\"title\" name=\"title\" onChange={e => onChangeHandler(e)} className=\"form-control\" id=\"title\">\r\n                                    <option value=\"Mr\">Mr</option>\r\n                                    <option value=\"Ms\">Ms</option>\r\n                                </select>\r\n                                {error && <p style={styles.formError}>{error.errors.title}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"number\">\r\n                                    Phone Number\r\n                                </label>\r\n                                <input\r\n                                    id=\"number\"\r\n                                    value={phone}\r\n                                    name=\"phone\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.phone}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    id=\"email\"\r\n                                    value={email}\r\n                                    name=\"email\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.identifier}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.email}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.username}</p>}\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label style={styles.label} htmlFor=\"password\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    name=\"password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.password}</p>}\r\n                            </div>\r\n                            {loading ? (\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n\r\n                            <div className=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    SIGN UP\r\n                                </button>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group col-md-12\">\r\n                                <Link to=\"/signin\" className=\"btn\" style={{color: '#023a9c', fontWeight: 'bold'}}>\r\n                                    Already a User? Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LandingPage.jsx",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\reducers.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\actions.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\ReuseableCompononts\\Preloader.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\User\\cart\\CartItem.jsx",["188"],"\r\nimport Naira from \"react-naira\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst CartItem = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const notifySuccess = (text) => toast.success(text);\r\n    const notifyWarning = (text) => toast.error(text);\r\n\r\n    const remove = async () => {\r\n        props.setCart(carts => carts.filter(cartt => cartt.id !== props.cart.id));\r\n        props.setCarts(carts => carts.filter(cartt => cartt.id !== props.cart.id));\r\n        notifySuccess(\"Cart item removed\")\r\n        props.setPress(props.press + 1)\r\n    }\r\n\r\n    const removeCart = async () => {\r\n        setLoading(true)\r\n        if(typeof props.token === \"string\"){\r\n            Axios.post(\"https://server.wakameals.validprofits.xyz/api/cart/remove\", {id: props.cart.id}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${props.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                  }\r\n            })\r\n            .then((res) => {\r\n                setLoading(false)\r\n                remove()\r\n            })\r\n            .catch(() => {\r\n                setLoading(false)\r\n                notifyWarning(\"Something went wrong!\")\r\n            })\r\n        } else {\r\n            remove()\r\n            setLoading(false) \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: \"white\"}} className=\"card p-3 mt-4 shadow border-0\">\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3500}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3\">\r\n                    <img  alt=\"photo\" style={{width: '100%', height: '120px', objectFit: \"contain\"}} src={props.cart.meal.image} />\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", height: \"100%\"}}>\r\n                        <div>\r\n                            <div className=\"mt-3 mt-lg-0\">\r\n                                <h6>{props.cart.meal.name}</h6>\r\n                            </div>\r\n                            <div className=\"mt-2\" style={{color: \"gray\", fontSize: \"13px\"}} >For: {typeof props.cart.name === \"number\" ? `person ${props.cart.name}` : props.cart.name }</div>\r\n                        </div>\r\n                        <div className=\"mt-2 d-none d-lg-block\">\r\n                            {loading ? (\r\n                                <div className=\"spinner-grow\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            ) : (\r\n                                <div onClick={removeCart} style={{color: \"#ff7417\", fontWeight: \"bold\", fontSize: \"13px\"}} className=\"cursor\">\r\n                                    <MdDeleteForever style={{color: \"#ff7417\", fontSize: \"20px\"}}/> REMOVE\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff7417\", fontWeight: \"bold\"}}>\r\n                        MEAL PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.meal.price}</Naira>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff7417\", fontWeight: \"bold\"}}>\r\n                        EXTRAS PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.sub_total - Number(props.cart.meal.price)}</Naira>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 mt-3 mt-lg-0\">\r\n                    <div style={{fontSize: \"12px\", color: \"#ff7417\", fontWeight: \"bold\"}}>\r\n                        TOTAL PRICE\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Naira>{props.cart.sub_total}</Naira>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-2 d-block d-lg-none\">\r\n                    {loading ? (\r\n                        <div className=\"spinner-grow\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div onClick={removeCart} style={{color: \"#ff7417\", fontWeight: \"bold\", fontSize: \"15px\"}} className=\"cursor\">\r\n                            <MdDeleteForever style={{color: \"#ff7417\", fontSize: \"25px\"}}/> REMOVE\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\WelcomeModal.jsx",["189","190"],"import { useEffect, useState } from \"react\"\r\nimport LocationDropdown from \"./LocationDropdown\"\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor: \"#ff7417\"\r\n    }\r\n  };\r\n\r\n\r\nconst WelcomeModal = (props) => {\r\n    const [state, setState] = useState({\r\n        states: props.states,\r\n        state: \"\",\r\n        isAvailable: \"\"\r\n    })\r\n    const [lga, setLga] = useState({\r\n        lgas: [],\r\n        lga: \"\",\r\n        isAvailable: \"\"\r\n    })\r\n    const [town, setTown] = useState({\r\n        towns: [],\r\n        town: \"\",\r\n        isAvailable: \"\"\r\n    })\r\n    \r\n\r\n    const onDone = () => {\r\n        props.setOpen(false)\r\n        localStorage.removeItem(\"location\")\r\n        localStorage.setItem(\"location\", JSON.stringify({\r\n            state: state.state,\r\n            lga: lga.lga,\r\n            town: town.town\r\n        }))\r\n        props.setOpenSuccess(true)\r\n    }\r\n\r\n    const onClose = () => {\r\n        props.setOpen(false)\r\n        props.setSuccess(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={props.open}\r\n                onRequestClose={() => null}\r\n                style={customStyles}\r\n                contentLabel=\"Select Location\"\r\n            >\r\n                {/* <h5 className=\"text-right\" onClick={() => props.setOpen(false)}>X</h5> */}\r\n                <h6 className=\"modal-title white\" id=\"myLandingModalLabel\">Welcome to Wakameals, please choose your delivery location</h6>\r\n                <div className=\"mt-3\">\r\n                    <div>\r\n                        \r\n                        {state.isAvailable === true && lga.isAvailable === true && town.isAvailable === true && (\r\n                            <button onClick={onDone} className=\"ml-2 d-inline btn btn-sm modal-btn\">select</button>\r\n                        )}\r\n                    </div>\r\n                    {state.isAvailable === false || lga.isAvailable === false || town.isAvailable === false ? (\r\n                        <div className=\"alert alert-danger my-2 white\" role=\"alert\">\r\n                            Sorry, we're currently not available for your location\r\n                        </div>\r\n                    ) : (\r\n\r\n                        <LocationDropdown openFail={props.openFail} setOpenFail={props.setOpenFail} openSuccess={props.openSuccess} setOpenSuccess={props.setOpenSuccess} state={state} lga={lga} town={town} setState={setState} setLga={setLga} setTown={setTown} />\r\n                    )\r\n                }\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomeModal","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\SuccessModal.jsx",["191","192"],"import { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n\tDONE\r\n} from \"../../../Redux/types\"\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor: \"#ff7417\"\r\n    }\r\n  };\r\n\r\nconst SuccessModal = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [step, setStep] = useState(1)\r\n    const [number, setNumber] = useState(1)\r\n    const [names, setNames] = useState({})\r\n    const [numberOfPersons, setNumberOfPersons] = useState([])\r\n\r\n    const cancel = () => {\r\n            localStorage.removeItem(\"names\")\r\n            localStorage.setItem(\"names\", JSON.stringify([1]))\r\n            props.setSuccess(true)\r\n            continue2()\r\n            props.notifySuccess(\"You're shopping for 1 person\")\r\n    }\r\n    \r\n    const continue1 = () => {\r\n        setStep(3)\r\n        if(number > 1){\r\n            for(var i = 1; i <= new Array(Number(number)).length; i++){\r\n                numberOfPersons.push(i)\r\n            }\r\n        } else {\r\n            localStorage.removeItem(\"names\")\r\n            localStorage.setItem(\"names\", JSON.stringify([1]))\r\n            props.setSuccess(true)\r\n            continue2()\r\n            props.notifySuccess(\"You're shopping for 1 person\")\r\n        }\r\n    }\r\n\r\n    const continue2 = () => {\r\n        props.setOpenSuccess(false)\r\n        props.setOpenFail(false)\r\n        props.setOpen(false)\r\n        dispatch({ type: DONE });\r\n    }\r\n\r\n    const onChange = (e, index) => {\r\n        setNames({\r\n            ...names,\r\n            [index]: e.target.value\r\n        })\r\n    }\r\n\r\n    const done1 = () => {\r\n        localStorage.setItem(\"names\", JSON.stringify([Number(number)]))\r\n        props.setSuccess(true)\r\n        props.notifySuccess(`You're shopping for ${number} persons`)\r\n        continue2()\r\n    }\r\n\r\n    const done = () => {\r\n        localStorage.setItem(\"names\", JSON.stringify(Object.values(names)))\r\n        props.setSuccess(true)\r\n        props.notifySuccess(`You're shopping for ${number} persons`)\r\n        continue2()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.location){\r\n            setStep(2)\r\n        }\r\n    }, [])\r\n\r\n    const handleNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={props.openSuccess}\r\n            onRequestClose={() => null}\r\n            style={customStyles}\r\n            contentLabel=\"Success\"\r\n        >\r\n            {step === 1 && (\r\n                <div>\r\n                    <div className=\"py-5 white\">\r\n                        Congrats! We can deliver to your location, please click below to continue……\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => setStep(2)} className=\"btn btn-sm modal-btn\">Continue</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {step === 2 && (\r\n                <div>\r\n                    <div className=\"py-3 white\">\r\n                        How many persons are you ordering for?\r\n                    </div>\r\n                    <div>\r\n                        <input value={number} name=\"number\" onChange={handleNumber} type=\"number\" className=\"form-control\" />\r\n                        <button onClick={continue1} className=\"btn btn-sm modal-btn mt-4 d-inline\">Continue</button>\r\n                        <button onClick={cancel} className=\"btn btn-sm modal-btn mt-4 d-inline ml-2\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {step === 3 && number > 1 && (\r\n                <div>\r\n                    <div className=\"py-3 white\">\r\n                        Would you like to personalize your order?\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={done1} className=\"btn btn-primary mt-4\">No</button>\r\n                        <button onClick={() => setStep(4)} className=\"btn modal-btn mt-4 ml-2\">Yes</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {step === 4 && (\r\n                <div style={{height: \"70vh\", overflowY: \"scroll\"}} className=\"pl-2 pr-4\">\r\n                    <h4 className=\"white\">Please enter the name of the {number} persons</h4>\r\n                    {numberOfPersons.map((data, index) => (\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"white\">Person {data}</label>\r\n                            <input name=\"text\" onChange={(e) => onChange(e, index)} type=\"text\" className=\"form-control\" placeholder=\"Mark Essien\" />\r\n                        </div>\r\n                    ))}\r\n                    <button onClick={() => done()} className=\"btn btn-sm modal-btn mt-4\">Continue</button>\r\n                </div>\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\FailModal.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\HeaderNav.jsx",["193","194"],"import { useEffect, useState } from 'react'\r\nimport {BiMenuAltRight} from \"react-icons/bi\"\r\nimport {MdAddLocation, MdShoppingCart} from \"react-icons/md\"\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n    USER_LOGOUT,\r\n    REFRESH\r\n} from \"../../Redux/types\"\r\n\r\nexport default function HeaderNav(props) {\r\n    const [token, setToken] = useState(null)\r\n    const [cart, setCart] = useState(0)\r\n    const dispatch = useDispatch();\r\n    let history = useHistory()\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        dispatch({ type: USER_LOGOUT });\r\n        setToken(null)\r\n        history.push(\"/signin\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.cartSize){\r\n            setCart(props.cartSize)\r\n        }\r\n    }, [props.cartSize])\r\n\r\n    useEffect(() => {\r\n        let tok = localStorage.getItem(\"token\")\r\n        let cart = localStorage.getItem(\"cart\")\r\n        let parsedCart = JSON.parse(cart)\r\n        setToken(tok)\r\n        if(parsedCart !== undefined && parsedCart !== null){\r\n            setCart(parsedCart.length)\r\n        }\r\n    }, [])\r\n\r\n    const changeLocation = () => {\r\n        dispatch({ type: REFRESH });\r\n        props.setOpen(true)\r\n        props.setSuccess(false)\r\n    }\r\n    return (\r\n        <div>\r\n               {/* ============ NAVBAR SECTION==========  */}\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n            <Link to=\"/\" className=\"navbar-brand\"> <img  alt=\"logo\" src=\"/logo.jpeg\" /></Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <BiMenuAltRight style={{color: \"white\", fontSize: \"30px\"}}/>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                \r\n                    {typeof token === \"string\" && (\r\n                    <Link to=\"/account\" className=\"nav-item\">\r\n                        <a className=\"nav-link text-white\">My Account</a>\r\n                    </Link>\r\n                     )}\r\n                    {typeof token === \"string\" && (\r\n                        <div onClick={handleLogout} className=\"nav-item cursor\">\r\n                            <div className=\"nav-link text-white\">Log Out</div>\r\n                        </div>\r\n                    )}\r\n                    {typeof token !== \"string\" && (\r\n                        <Link to=\"/signin\" className=\"nav-item\">\r\n                            <div className=\"nav-link text-white\">Sign In</div>\r\n                        </Link>\r\n                    )}\r\n                    {typeof token !== \"string\" && (\r\n                    <Link to=\"/signup\" className=\"nav-item\">\r\n                        <div className=\"nav-link text-white\">Sign Up</div>\r\n                    </Link>\r\n                    )}\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    {props.setOpen && props.home && (\r\n                        <div className=\"nav-item cursor\">\r\n                            <div onClick={changeLocation} className=\"nav-link text-white\">\r\n                                <MdAddLocation style={{color: \"#ff7417\", fontSize: \"1.5em\"}}/> change location\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {!props.cart && (\r\n                        <Link to=\"/cart\" className=\"nav-item\">\r\n                            <a className=\"nav-link text-white\">\r\n                                <MdShoppingCart style={{color: \"#ff7417\", fontSize: \"1.5em\"}}/> {cart} items\r\n                            </a>\r\n                        </Link>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        {/* ============ NAVBAR SECTION ENDS HERE==========  */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\index.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\Redux\\types.js",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\LocationDropdown.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Categories.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\SubCategory.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\Meal.jsx",["195"],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\AddToCart.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\ItemDetail.jsx",["196"],"import React from 'react';\r\nimport Naira from 'react-naira';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nexport default function ItemDetail({meal, open, handleClose}) {\r\n    \r\n    return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{meal.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div>\r\n                            <img alt=\"photo\" style={{height: '200px', width: '100%'}} src={meal.image} />\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"mt-3\">\r\n                                <div className=\"d-flex flex-row-reverse\">\r\n                                    <p style={{color: 'black', fontSize: '0.8em', fontWeight: 'bold'}}><Naira>{meal.price}</Naira></p>\r\n                                </div>\r\n                                <h5 style={{color: 'black'}}>Description </h5>\r\n                                <p style={{color: 'black', fontSize: \"0.7em\"}}>\r\n                                    {parse(meal.description)}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} style={{color: \"#ff7417\"}}>\r\n                    CLOSE\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n      \r\n    );\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\meal\\CartItem.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\Bg.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Guest\\landingPage\\CatItems.jsx",[],"C:\\Users\\USER\\Documents\\GitHub\\wakameals_user\\src\\AppComponents\\Navigation\\Footer.jsx",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":31,"column":21,"nodeType":"203","endLine":31,"endColumn":265},{"ruleId":"204","severity":1,"message":"205","line":56,"column":8,"nodeType":"206","endLine":56,"endColumn":14,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"205","line":55,"column":8,"nodeType":"206","endLine":55,"endColumn":14,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":10,"column":12,"nodeType":"211","messageId":"212","endLine":10,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":10,"column":21,"nodeType":"211","messageId":"212","endLine":10,"endColumn":31},{"ruleId":"204","severity":1,"message":"214","line":89,"column":8,"nodeType":"206","endLine":89,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":121,"column":103,"nodeType":"218","endLine":121,"endColumn":137},{"ruleId":"216","severity":1,"message":"217","line":121,"column":163,"nodeType":"218","endLine":121,"endColumn":173},{"ruleId":"209","severity":1,"message":"219","line":1,"column":18,"nodeType":"211","messageId":"212","endLine":1,"endColumn":32},{"ruleId":"209","severity":1,"message":"220","line":10,"column":20,"nodeType":"211","messageId":"212","endLine":10,"endColumn":29},{"ruleId":"221","severity":1,"message":"222","line":22,"column":1,"nodeType":"223","messageId":"224","endLine":26,"endColumn":2},{"ruleId":"209","severity":1,"message":"225","line":33,"column":12,"nodeType":"211","messageId":"212","endLine":33,"endColumn":23},{"ruleId":"209","severity":1,"message":"226","line":90,"column":12,"nodeType":"211","messageId":"212","endLine":90,"endColumn":16},{"ruleId":"204","severity":1,"message":"227","line":313,"column":8,"nodeType":"206","endLine":313,"endColumn":10,"suggestions":"228"},{"ruleId":"209","severity":1,"message":"229","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"230","line":28,"column":8,"nodeType":"206","endLine":28,"endColumn":15,"suggestions":"231"},{"ruleId":"216","severity":1,"message":"217","line":77,"column":139,"nodeType":"218","endLine":77,"endColumn":149},{"ruleId":"209","severity":1,"message":"232","line":5,"column":8,"nodeType":"211","messageId":"212","endLine":5,"endColumn":17},{"ruleId":"209","severity":1,"message":"233","line":6,"column":8,"nodeType":"211","messageId":"212","endLine":6,"endColumn":20},{"ruleId":"209","severity":1,"message":"234","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":20},{"ruleId":"209","severity":1,"message":"235","line":19,"column":11,"nodeType":"211","messageId":"212","endLine":19,"endColumn":19},{"ruleId":"209","severity":1,"message":"236","line":23,"column":12,"nodeType":"211","messageId":"212","endLine":23,"endColumn":18},{"ruleId":"209","severity":1,"message":"237","line":24,"column":12,"nodeType":"211","messageId":"212","endLine":24,"endColumn":16},{"ruleId":"209","severity":1,"message":"238","line":25,"column":12,"nodeType":"211","messageId":"212","endLine":25,"endColumn":20},{"ruleId":"209","severity":1,"message":"239","line":25,"column":22,"nodeType":"211","messageId":"212","endLine":25,"endColumn":33},{"ruleId":"209","severity":1,"message":"240","line":26,"column":12,"nodeType":"211","messageId":"212","endLine":26,"endColumn":23},{"ruleId":"209","severity":1,"message":"241","line":30,"column":29,"nodeType":"211","messageId":"212","endLine":30,"endColumn":47},{"ruleId":"209","severity":1,"message":"242","line":32,"column":12,"nodeType":"211","messageId":"212","endLine":32,"endColumn":20},{"ruleId":"209","severity":1,"message":"243","line":36,"column":12,"nodeType":"211","messageId":"212","endLine":36,"endColumn":18},{"ruleId":"209","severity":1,"message":"244","line":58,"column":13,"nodeType":"211","messageId":"212","endLine":58,"endColumn":29},{"ruleId":"204","severity":1,"message":"245","line":126,"column":8,"nodeType":"206","endLine":126,"endColumn":10,"suggestions":"246"},{"ruleId":"204","severity":1,"message":"247","line":141,"column":8,"nodeType":"206","endLine":141,"endColumn":17,"suggestions":"248"},{"ruleId":"201","severity":1,"message":"202","line":62,"column":21,"nodeType":"203","endLine":62,"endColumn":132},{"ruleId":"209","severity":1,"message":"249","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":19},{"ruleId":"209","severity":1,"message":"250","line":47,"column":11,"nodeType":"211","messageId":"212","endLine":47,"endColumn":18},{"ruleId":"209","severity":1,"message":"241","line":25,"column":29,"nodeType":"211","messageId":"212","endLine":25,"endColumn":47},{"ruleId":"204","severity":1,"message":"251","line":82,"column":8,"nodeType":"206","endLine":82,"endColumn":10,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":59,"column":25,"nodeType":"203","endLine":59,"endColumn":60},{"ruleId":"253","severity":1,"message":"254","line":88,"column":29,"nodeType":"203","endLine":88,"endColumn":64},{"ruleId":"201","severity":1,"message":"202","line":34,"column":33,"nodeType":"203","endLine":38,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":25,"column":29,"nodeType":"203","endLine":25,"endColumn":106},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orders.data' and 'orders.next_url'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOrders' needs the current value of 'orders.data'.","ArrayExpression",["257"],["258"],"no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","'setSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["259"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MdLocationCity' is defined but never used.","'TextField' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'order_codes' is assigned a value but never used.","'cart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config', 'history', 'pickupLocation', and 'props.location.query'. Either include them or remove the dependency array. You can also do a functional update 'setConfig(c => ...)' if you only need 'config' in the 'setConfig' call.",["260"],"'TextareaAutosize' is defined but never used.","React Hook useEffect has a missing dependency: 'carts'. Either include it or remove the dependency array.",["261"],"'FailModal' is defined but never used.","'SuccessModal' is defined but never used.","'WelcomeModal' is defined but never used.","'dispatch' is assigned a value but never used.","'states' is assigned a value but never used.","'open' is assigned a value but never used.","'openFail' is assigned a value but never used.","'setOpenFail' is assigned a value but never used.","'openSuccess' is assigned a value but never used.","'setNumberOfPersons' is assigned a value but never used.","'location' is assigned a value but never used.","'finish' is assigned a value but never used.","'parsedStoredCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'done.done' and 'props.location.query'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'numberOfPersons'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPerson' needs the current value of 'numberOfPersons'.",["263"],"'useEffect' is defined but never used.","'onClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.",["264"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"265","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [call, orders.data, orders.next_url]",{"range":"280","text":"281"},{"range":"282","text":"281"},"Update the dependencies array to be: [formData]",{"range":"283","text":"284"},"Update the dependencies array to be: [config, history, pickupLocation, props.location.query]",{"range":"285","text":"286"},"Update the dependencies array to be: [carts, press]",{"range":"287","text":"288"},"Update the dependencies array to be: [done.done, props.location.query]",{"range":"289","text":"290"},"Update the dependencies array to be: [numberOfPersons, success]",{"range":"291","text":"292"},"Update the dependencies array to be: [props.location]",{"range":"293","text":"294"},[1880,1886],"[call, orders.data, orders.next_url]",[1882,1888],[3058,3060],"[formData]",[10516,10518],"[config, history, pickupLocation, props.location.query]",[969,976],"[carts, press]",[4585,4587],"[done.done, props.location.query]",[5081,5090],"[numberOfPersons, success]",[2413,2415],"[props.location]"]